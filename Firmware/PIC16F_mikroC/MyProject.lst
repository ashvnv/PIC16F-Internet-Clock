;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 02-03-2023 18:48:06
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x29FE      	GOTO       510
_I2C_init:
;MyProject.c,375 :: 		void I2C_init(){
;MyProject.c,376 :: 		SSPEN_bit = 0;  //Clear MSSP
0x0003	0x1283      	BCF        STATUS, 5
0x0004	0x1303      	BCF        STATUS, 6
0x0005	0x1294      	BCF        SSPEN_bit, BitPos(SSPEN_bit+0)
;MyProject.c,377 :: 		TRISC.F3 = 1;  //configured as I/P SCL
0x0006	0x1683      	BSF        STATUS, 5
0x0007	0x1587      	BSF        TRISC, 3
;MyProject.c,378 :: 		SMP_bit = 0;
0x0008	0x1394      	BCF        SMP_bit, BitPos(SMP_bit+0)
;MyProject.c,379 :: 		SSPCON = 0x28;   //Configure in I2C master mode
0x0009	0x3028      	MOVLW      40
0x000A	0x1283      	BCF        STATUS, 5
0x000B	0x0094      	MOVWF      SSPCON
;MyProject.c,380 :: 		}
L_end_I2C_init:
0x000C	0x0008      	RETURN
; end of _I2C_init
_Div_16x16_S_L:
;__Lib_Math.c,421 :: 		
;__Lib_Math.c,427 :: 		
0x000D	0x0D71      	RLF        R1, 0
;__Lib_Math.c,428 :: 		
0x000E	0x0DF8      	RLF        R8, 1
;__Lib_Math.c,429 :: 		
0x000F	0x0DF9      	RLF        R9, 1
;__Lib_Math.c,430 :: 		
0x0010	0x0874      	MOVF       R4, 0
;__Lib_Math.c,431 :: 		
0x0011	0x02F8      	SUBWF      R8, 1
;__Lib_Math.c,432 :: 		
0x0012	0x0875      	MOVF       R5, 0
;__Lib_Math.c,433 :: 		
0x0013	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,434 :: 		
0x0014	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,435 :: 		
0x0015	0x02F9      	SUBWF      R9, 1
;__Lib_Math.c,436 :: 		
0x0016	0x0DF0      	RLF        R0, 1
;__Lib_Math.c,437 :: 		
0x0017	0x0DF1      	RLF        R1, 1
;__Lib_Math.c,439 :: 		
0x0018	0x300F      	MOVLW      15
;__Lib_Math.c,440 :: 		
0x0019	0x00FC      	MOVWF      R12
;__Lib_Math.c,442 :: 		
0x001A	0x0D71      	RLF        R1, 0
;__Lib_Math.c,443 :: 		
0x001B	0x0DF8      	RLF        R8, 1
;__Lib_Math.c,444 :: 		
0x001C	0x0DF9      	RLF        R9, 1
;__Lib_Math.c,445 :: 		
0x001D	0x0874      	MOVF       R4, 0
;__Lib_Math.c,447 :: 		
0x001E	0x1C70      	BTFSS      R0, 0
;__Lib_Math.c,448 :: 		
0x001F	0x2826      	GOTO       $+7
;__Lib_Math.c,449 :: 		
0x0020	0x02F8      	SUBWF      R8, 1
;__Lib_Math.c,450 :: 		
0x0021	0x0875      	MOVF       R5, 0
;__Lib_Math.c,451 :: 		
0x0022	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,452 :: 		
0x0023	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,453 :: 		
0x0024	0x02F9      	SUBWF      R9, 1
;__Lib_Math.c,454 :: 		
0x0025	0x282B      	GOTO       $+6
;__Lib_Math.c,456 :: 		
0x0026	0x07F8      	ADDWF      R8, 1
;__Lib_Math.c,457 :: 		
0x0027	0x0875      	MOVF       R5, 0
;__Lib_Math.c,458 :: 		
0x0028	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,459 :: 		
0x0029	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,460 :: 		
0x002A	0x07F9      	ADDWF      R9, 1
;__Lib_Math.c,462 :: 		
0x002B	0x0DF0      	RLF        R0, 1
;__Lib_Math.c,463 :: 		
0x002C	0x0DF1      	RLF        R1, 1
;__Lib_Math.c,465 :: 		
0x002D	0x0BFC      	DECFSZ     R12, 1
;__Lib_Math.c,466 :: 		
0x002E	0x281A      	GOTO       $-20
;__Lib_Math.c,468 :: 		
0x002F	0x1870      	BTFSC      R0, 0
;__Lib_Math.c,469 :: 		
0x0030	0x2837      	GOTO       $+7
;__Lib_Math.c,470 :: 		
0x0031	0x0874      	MOVF       R4, 0
;__Lib_Math.c,471 :: 		
0x0032	0x07F8      	ADDWF      R8, 1
;__Lib_Math.c,472 :: 		
0x0033	0x0875      	MOVF       R5, 0
;__Lib_Math.c,473 :: 		
0x0034	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,474 :: 		
0x0035	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,475 :: 		
0x0036	0x07F9      	ADDWF      R9, 1
;__Lib_Math.c,476 :: 		
0x0037	0x0000      	NOP
;__Lib_Math.c,478 :: 		
L_end_Div_16x16_S_L:
0x0038	0x0008      	RETURN
; end of _Div_16x16_S_L
_____DoICP:
;__Lib_System.c,6 :: 		
;__Lib_System.c,9 :: 		
0x0039	0x1283      	BCF        STATUS, 5
0x003A	0x1303      	BCF        STATUS, 6
0x003B	0x0827      	MOVF       ___DoICPAddr+1, 0
0x003C	0x008A      	MOVWF      PCLATH
;__Lib_System.c,10 :: 		
0x003D	0x0826      	MOVF       ___DoICPAddr, 0
0x003E	0x0082      	MOVWF      PCL
;__Lib_System.c,12 :: 		
L_end_____DoICP:
0x003F	0x0008      	RETURN
; end of _____DoICP
_SPI_init:
;MyProject.c,346 :: 		void SPI_init(void){
;MyProject.c,347 :: 		SSPEN_bit = 0;//Turn off the I2C mode
0x0040	0x1283      	BCF        STATUS, 5
0x0041	0x1303      	BCF        STATUS, 6
0x0042	0x1294      	BCF        SSPEN_bit, BitPos(SSPEN_bit+0)
;MyProject.c,348 :: 		TRISC.F3 = 0;  //configured as O/P SCK
0x0043	0x1683      	BSF        STATUS, 5
0x0044	0x1187      	BCF        TRISC, 3
;MyProject.c,349 :: 		SMP_bit = 1; //Input data sampled at end of data output time
0x0045	0x1794      	BSF        SMP_bit, BitPos(SMP_bit+0)
;MyProject.c,350 :: 		SSPCON = 0x22; //Enable SPI with Fosc/64 Clock
0x0046	0x3022      	MOVLW      34
0x0047	0x1283      	BCF        STATUS, 5
0x0048	0x0094      	MOVWF      SSPCON
;MyProject.c,351 :: 		}
L_end_SPI_init:
0x0049	0x0008      	RETURN
; end of _SPI_init
_SPI_tx:
;MyProject.c,353 :: 		void SPI_tx(unsigned char addr,unsigned char dat)
;MyProject.c,355 :: 		PORTA.F5 = 0;
0x004A	0x1283      	BCF        STATUS, 5
0x004B	0x1303      	BCF        STATUS, 6
0x004C	0x1285      	BCF        PORTA, 5
;MyProject.c,356 :: 		SSPBUF = addr;
0x004D	0x0830      	MOVF       FARG_SPI_tx_addr, 0
0x004E	0x0093      	MOVWF      SSPBUF
;MyProject.c,357 :: 		while(~BF_bit);
L_SPI_tx62:
0x004F	0x1683      	BSF        STATUS, 5
0x0050	0x1814      	BTFSC      BF_bit, BitPos(BF_bit+0)
0x0051	0x2854      	GOTO       L__SPI_tx117
0x0052	0x1403      	BSF        STATUS, 0
0x0053	0x2855      	GOTO       L__SPI_tx118
L__SPI_tx117:
0x0054	0x1003      	BCF        STATUS, 0
L__SPI_tx118:
0x0055	0x1C03      	BTFSS      STATUS, 0
0x0056	0x2858      	GOTO       L_SPI_tx63
0x0057	0x284F      	GOTO       L_SPI_tx62
L_SPI_tx63:
;MyProject.c,358 :: 		SSPBUF = dat;
0x0058	0x1283      	BCF        STATUS, 5
0x0059	0x0831      	MOVF       FARG_SPI_tx_dat, 0
0x005A	0x0093      	MOVWF      SSPBUF
;MyProject.c,359 :: 		while(~BF_bit);
L_SPI_tx64:
0x005B	0x1683      	BSF        STATUS, 5
0x005C	0x1814      	BTFSC      BF_bit, BitPos(BF_bit+0)
0x005D	0x2860      	GOTO       L__SPI_tx119
0x005E	0x1403      	BSF        STATUS, 0
0x005F	0x2861      	GOTO       L__SPI_tx120
L__SPI_tx119:
0x0060	0x1003      	BCF        STATUS, 0
L__SPI_tx120:
0x0061	0x1C03      	BTFSS      STATUS, 0
0x0062	0x2864      	GOTO       L_SPI_tx65
0x0063	0x285B      	GOTO       L_SPI_tx64
L_SPI_tx65:
;MyProject.c,360 :: 		PORTA.F5 = 1;
0x0064	0x1283      	BCF        STATUS, 5
0x0065	0x1685      	BSF        PORTA, 5
;MyProject.c,361 :: 		}
L_end_SPI_tx:
0x0066	0x0008      	RETURN
; end of _SPI_tx
_Mul_16X16_U:
;__Lib_Math.c,136 :: 		
;__Lib_Math.c,143 :: 		
0x0067	0x1283      	BCF        STATUS, 5
;__Lib_Math.c,144 :: 		
0x0068	0x1303      	BCF        STATUS, 6
;__Lib_Math.c,145 :: 		
0x0069	0x01FB      	CLRF       R11
;__Lib_Math.c,146 :: 		
0x006A	0x01FA      	CLRF       R10
;__Lib_Math.c,147 :: 		
0x006B	0x01F9      	CLRF       R9
;__Lib_Math.c,148 :: 		
0x006C	0x3080      	MOVLW      128
;__Lib_Math.c,149 :: 		
0x006D	0x00F8      	MOVWF      R8
;__Lib_Math.c,150 :: 		
0x006E	0x0CF1      	RRF        R1, 1
;__Lib_Math.c,151 :: 		
0x006F	0x0CF0      	RRF        R0, 1
;__Lib_Math.c,152 :: 		
0x0070	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,153 :: 		
0x0071	0x287B      	GOTO       $+10
;__Lib_Math.c,154 :: 		
0x0072	0x0874      	MOVF       R4, 0
;__Lib_Math.c,155 :: 		
0x0073	0x07F9      	ADDWF      R9, 1
;__Lib_Math.c,156 :: 		
0x0074	0x0875      	MOVF       R5, 0
;__Lib_Math.c,157 :: 		
0x0075	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,158 :: 		
0x0076	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,159 :: 		
0x0077	0x07FA      	ADDWF      R10, 1
;__Lib_Math.c,160 :: 		
0x0078	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,161 :: 		
0x0079	0x0AFB      	INCF       R11, 1
;__Lib_Math.c,162 :: 		
0x007A	0x1003      	BCF        STATUS, 0
;__Lib_Math.c,163 :: 		
0x007B	0x1FF0      	BTFSS      R0, 7
;__Lib_Math.c,164 :: 		
0x007C	0x2883      	GOTO       $+7
;__Lib_Math.c,165 :: 		
0x007D	0x0874      	MOVF       R4, 0
;__Lib_Math.c,166 :: 		
0x007E	0x07FA      	ADDWF      R10, 1
;__Lib_Math.c,167 :: 		
0x007F	0x0875      	MOVF       R5, 0
;__Lib_Math.c,168 :: 		
0x0080	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,169 :: 		
0x0081	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,170 :: 		
0x0082	0x07FB      	ADDWF      R11, 1
;__Lib_Math.c,171 :: 		
0x0083	0x0CFB      	RRF        R11, 1
;__Lib_Math.c,172 :: 		
0x0084	0x0CFA      	RRF        R10, 1
;__Lib_Math.c,173 :: 		
0x0085	0x0CF9      	RRF        R9, 1
;__Lib_Math.c,174 :: 		
0x0086	0x0CF8      	RRF        R8, 1
;__Lib_Math.c,175 :: 		
0x0087	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,176 :: 		
0x0088	0x286E      	GOTO       $-26
;__Lib_Math.c,177 :: 		
0x0089	0x087B      	MOVF       R11, 0
;__Lib_Math.c,178 :: 		
0x008A	0x00F3      	MOVWF      R3
;__Lib_Math.c,179 :: 		
0x008B	0x087A      	MOVF       R10, 0
;__Lib_Math.c,180 :: 		
0x008C	0x00F2      	MOVWF      R2
;__Lib_Math.c,181 :: 		
0x008D	0x0879      	MOVF       R9, 0
;__Lib_Math.c,182 :: 		
0x008E	0x00F1      	MOVWF      R1
;__Lib_Math.c,183 :: 		
0x008F	0x0878      	MOVF       R8, 0
;__Lib_Math.c,184 :: 		
0x0090	0x00F0      	MOVWF      R0
;__Lib_Math.c,187 :: 		
L_end_Mul_16X16_U:
0x0091	0x0008      	RETURN
; end of _Mul_16X16_U
___CC2DW:
;__Lib_System.c,134 :: 		
;__Lib_System.c,137 :: 		
_CC2D_Loop1:
;__Lib_System.c,139 :: 		
0x0092	0x2039      	CALL       _____DoICP
0x0093	0x118A      	BCF        PCLATH, 3
0x0094	0x120A      	BCF        PCLATH, 4
;__Lib_System.c,141 :: 		
0x0095	0x0080      	MOVWF      INDF
;__Lib_System.c,142 :: 		
0x0096	0x0A84      	INCF       FSR, 1
;__Lib_System.c,143 :: 		
0x0097	0x0AA6      	INCF       ___DoICPAddr, 1
;__Lib_System.c,145 :: 		
0x0098	0x1903      	BTFSC      STATUS, 2
;__Lib_System.c,146 :: 		
0x0099	0x0AA7      	INCF       ___DoICPAddr+1, 1
;__Lib_System.c,147 :: 		
0x009A	0x03F0      	DECF       R0, 1
;__Lib_System.c,149 :: 		
0x009B	0x1D03      	BTFSS      STATUS, 2
;__Lib_System.c,150 :: 		
0x009C	0x2892      	GOTO       _CC2D_Loop1
;__Lib_System.c,152 :: 		
L_end___CC2DW:
0x009D	0x0008      	RETURN
; end of ___CC2DW
_SPI_update:
;MyProject.c,363 :: 		void SPI_update() {
;MyProject.c,364 :: 		SPI_init();
0x009E	0x2040      	CALL       _SPI_init
;MyProject.c,366 :: 		SPI_tx(0x01,rtc_hour_set >> 4);//Digit 0 Hour MSB
0x009F	0x3001      	MOVLW      1
0x00A0	0x00B0      	MOVWF      FARG_SPI_tx_addr
0x00A1	0x0825      	MOVF       _rtc_hour_set, 0
0x00A2	0x00B1      	MOVWF      FARG_SPI_tx_dat
0x00A3	0x0CB1      	RRF        FARG_SPI_tx_dat, 1
0x00A4	0x13B1      	BCF        FARG_SPI_tx_dat, 7
0x00A5	0x0CB1      	RRF        FARG_SPI_tx_dat, 1
0x00A6	0x13B1      	BCF        FARG_SPI_tx_dat, 7
0x00A7	0x0CB1      	RRF        FARG_SPI_tx_dat, 1
0x00A8	0x13B1      	BCF        FARG_SPI_tx_dat, 7
0x00A9	0x0CB1      	RRF        FARG_SPI_tx_dat, 1
0x00AA	0x13B1      	BCF        FARG_SPI_tx_dat, 7
0x00AB	0x204A      	CALL       _SPI_tx
;MyProject.c,367 :: 		SPI_tx(0x02,rtc_hour_set & 0x0F);//Digit 1 Hour LSB
0x00AC	0x3002      	MOVLW      2
0x00AD	0x00B0      	MOVWF      FARG_SPI_tx_addr
0x00AE	0x300F      	MOVLW      15
0x00AF	0x0525      	ANDWF      _rtc_hour_set, 0
0x00B0	0x00B1      	MOVWF      FARG_SPI_tx_dat
0x00B1	0x204A      	CALL       _SPI_tx
;MyProject.c,368 :: 		SPI_tx(0x03,rtc_min_set >> 4);//Digit 2 Minute MSB
0x00B2	0x3003      	MOVLW      3
0x00B3	0x00B0      	MOVWF      FARG_SPI_tx_addr
0x00B4	0x0822      	MOVF       _rtc_min_set, 0
0x00B5	0x00B1      	MOVWF      FARG_SPI_tx_dat
0x00B6	0x0CB1      	RRF        FARG_SPI_tx_dat, 1
0x00B7	0x13B1      	BCF        FARG_SPI_tx_dat, 7
0x00B8	0x0CB1      	RRF        FARG_SPI_tx_dat, 1
0x00B9	0x13B1      	BCF        FARG_SPI_tx_dat, 7
0x00BA	0x0CB1      	RRF        FARG_SPI_tx_dat, 1
0x00BB	0x13B1      	BCF        FARG_SPI_tx_dat, 7
0x00BC	0x0CB1      	RRF        FARG_SPI_tx_dat, 1
0x00BD	0x13B1      	BCF        FARG_SPI_tx_dat, 7
0x00BE	0x204A      	CALL       _SPI_tx
;MyProject.c,369 :: 		SPI_tx(0x04,rtc_min_set & 0x0F);//Digit 3 Minute LSB
0x00BF	0x3004      	MOVLW      4
0x00C0	0x00B0      	MOVWF      FARG_SPI_tx_addr
0x00C1	0x300F      	MOVLW      15
0x00C2	0x0522      	ANDWF      _rtc_min_set, 0
0x00C3	0x00B1      	MOVWF      FARG_SPI_tx_dat
0x00C4	0x204A      	CALL       _SPI_tx
;MyProject.c,371 :: 		}
L_end_SPI_update:
0x00C5	0x0008      	RETURN
; end of _SPI_update
_Mul_8X8_U:
;__Lib_Math.c,103 :: 		
;__Lib_Math.c,108 :: 		
0x00C6	0x1283      	BCF        STATUS, 5
;__Lib_Math.c,109 :: 		
0x00C7	0x1303      	BCF        STATUS, 6
;__Lib_Math.c,110 :: 		
0x00C8	0x0870      	MOVF       R0, 0
;__Lib_Math.c,111 :: 		
0x00C9	0x00F1      	MOVWF      R1
;__Lib_Math.c,112 :: 		
0x00CA	0x01F0      	CLRF       R0
;__Lib_Math.c,113 :: 		
0x00CB	0x3008      	MOVLW      8
;__Lib_Math.c,114 :: 		
0x00CC	0x00FC      	MOVWF      R12
;__Lib_Math.c,115 :: 		
0x00CD	0x0871      	MOVF       R1, 0
;__Lib_Math.c,116 :: 		
0x00CE	0x0CF4      	RRF        R4, 1
;__Lib_Math.c,117 :: 		
0x00CF	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,118 :: 		
0x00D0	0x28D5      	GOTO       $+5
;__Lib_Math.c,119 :: 		
0x00D1	0x0BFC      	DECFSZ     R12, 1
;__Lib_Math.c,120 :: 		
0x00D2	0x28CE      	GOTO       $-4
;__Lib_Math.c,121 :: 		
0x00D3	0x01F1      	CLRF       R1
;__Lib_Math.c,122 :: 		
0x00D4	0x3400      	RETLW      0
;__Lib_Math.c,123 :: 		
0x00D5	0x1003      	BCF        STATUS, 0
;__Lib_Math.c,124 :: 		
0x00D6	0x28DA      	GOTO       $+4
;__Lib_Math.c,125 :: 		
0x00D7	0x0CF4      	RRF        R4, 1
;__Lib_Math.c,126 :: 		
0x00D8	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,127 :: 		
0x00D9	0x07F1      	ADDWF      R1, 1
;__Lib_Math.c,128 :: 		
0x00DA	0x0CF1      	RRF        R1, 1
;__Lib_Math.c,129 :: 		
0x00DB	0x0CF0      	RRF        R0, 1
;__Lib_Math.c,130 :: 		
0x00DC	0x0BFC      	DECFSZ     R12, 1
;__Lib_Math.c,131 :: 		
0x00DD	0x28D7      	GOTO       $-6
;__Lib_Math.c,133 :: 		
;__Lib_Math.c,134 :: 		
L_end_Mul_8X8_U:
0x00DE	0x0008      	RETURN
; end of _Mul_8X8_U
_I2C_update_rtc:
;MyProject.c,382 :: 		void I2C_update_rtc(unsigned char sec){
;MyProject.c,383 :: 		I2C_init();
0x00DF	0x2003      	CALL       _I2C_init
;MyProject.c,385 :: 		SEN_bit = 1; //enable start condition on I2C Bus
0x00E0	0x1683      	BSF        STATUS, 5
0x00E1	0x1411      	BSF        SEN_bit, BitPos(SEN_bit+0)
;MyProject.c,386 :: 		while(SEN_bit); //wait for start condition to complete
L_I2C_update_rtc66:
0x00E2	0x1C11      	BTFSS      SEN_bit, BitPos(SEN_bit+0)
0x00E3	0x28E5      	GOTO       L_I2C_update_rtc67
0x00E4	0x28E2      	GOTO       L_I2C_update_rtc66
L_I2C_update_rtc67:
;MyProject.c,388 :: 		SSPBUF = 0xD0; //RTC address with Write command
0x00E5	0x30D0      	MOVLW      208
0x00E6	0x1283      	BCF        STATUS, 5
0x00E7	0x0093      	MOVWF      SSPBUF
;MyProject.c,389 :: 		while(SSPSTAT & 0x04); //Wait for transfer to complete
L_I2C_update_rtc68:
0x00E8	0x1683      	BSF        STATUS, 5
0x00E9	0x1D14      	BTFSS      SSPSTAT, 2
0x00EA	0x28EC      	GOTO       L_I2C_update_rtc69
0x00EB	0x28E8      	GOTO       L_I2C_update_rtc68
L_I2C_update_rtc69:
;MyProject.c,391 :: 		SSPBUF = 0x00; //RTC seconds register address
0x00EC	0x1283      	BCF        STATUS, 5
0x00ED	0x0193      	CLRF       SSPBUF
;MyProject.c,392 :: 		while(SSPSTAT & 0x04); //Wait for transfer to complete
L_I2C_update_rtc70:
0x00EE	0x1683      	BSF        STATUS, 5
0x00EF	0x1D14      	BTFSS      SSPSTAT, 2
0x00F0	0x28F2      	GOTO       L_I2C_update_rtc71
0x00F1	0x28EE      	GOTO       L_I2C_update_rtc70
L_I2C_update_rtc71:
;MyProject.c,395 :: 		SSPBUF = sec;//Seconds register
0x00F2	0x1283      	BCF        STATUS, 5
0x00F3	0x082E      	MOVF       FARG_I2C_update_rtc_sec, 0
0x00F4	0x0093      	MOVWF      SSPBUF
;MyProject.c,396 :: 		while(SSPSTAT & 0x04); //Wait for transfer to complete
L_I2C_update_rtc72:
0x00F5	0x1683      	BSF        STATUS, 5
0x00F6	0x1D14      	BTFSS      SSPSTAT, 2
0x00F7	0x28F9      	GOTO       L_I2C_update_rtc73
0x00F8	0x28F5      	GOTO       L_I2C_update_rtc72
L_I2C_update_rtc73:
;MyProject.c,399 :: 		SSPBUF = rtc_min_set; //Update the minutes register
0x00F9	0x1283      	BCF        STATUS, 5
0x00FA	0x0822      	MOVF       _rtc_min_set, 0
0x00FB	0x0093      	MOVWF      SSPBUF
;MyProject.c,400 :: 		while(SSPSTAT & 0x04); //Wait for transfer to complete
L_I2C_update_rtc74:
0x00FC	0x1683      	BSF        STATUS, 5
0x00FD	0x1D14      	BTFSS      SSPSTAT, 2
0x00FE	0x2900      	GOTO       L_I2C_update_rtc75
0x00FF	0x28FC      	GOTO       L_I2C_update_rtc74
L_I2C_update_rtc75:
;MyProject.c,403 :: 		SSPBUF = rtc_hour_set; //Update the hour register
0x0100	0x1283      	BCF        STATUS, 5
0x0101	0x0825      	MOVF       _rtc_hour_set, 0
0x0102	0x0093      	MOVWF      SSPBUF
;MyProject.c,404 :: 		while(SSPSTAT & 0x04); //Wait for transfer to complete
L_I2C_update_rtc76:
0x0103	0x1683      	BSF        STATUS, 5
0x0104	0x1D14      	BTFSS      SSPSTAT, 2
0x0105	0x2907      	GOTO       L_I2C_update_rtc77
0x0106	0x2903      	GOTO       L_I2C_update_rtc76
L_I2C_update_rtc77:
;MyProject.c,407 :: 		PEN_bit = 1;//Enable stop condition
0x0107	0x1511      	BSF        PEN_bit, BitPos(PEN_bit+0)
;MyProject.c,408 :: 		while(PEN_bit); //Wait for stop condition to complete
L_I2C_update_rtc78:
0x0108	0x1D11      	BTFSS      PEN_bit, BitPos(PEN_bit+0)
0x0109	0x290B      	GOTO       L_I2C_update_rtc79
0x010A	0x2908      	GOTO       L_I2C_update_rtc78
L_I2C_update_rtc79:
;MyProject.c,409 :: 		}
L_end_I2C_update_rtc:
0x010B	0x0008      	RETURN
; end of _I2C_update_rtc
_I2C_update_time:
;MyProject.c,411 :: 		void I2C_update_time(){
;MyProject.c,412 :: 		I2C_init();
0x010C	0x2003      	CALL       _I2C_init
;MyProject.c,414 :: 		SEN_bit = 1; //enable start condition on I2C Bus
0x010D	0x1683      	BSF        STATUS, 5
0x010E	0x1411      	BSF        SEN_bit, BitPos(SEN_bit+0)
;MyProject.c,415 :: 		while(SEN_bit); //wait for start condition to complete
L_I2C_update_time80:
0x010F	0x1C11      	BTFSS      SEN_bit, BitPos(SEN_bit+0)
0x0110	0x2912      	GOTO       L_I2C_update_time81
0x0111	0x290F      	GOTO       L_I2C_update_time80
L_I2C_update_time81:
;MyProject.c,417 :: 		SSPBUF = 0xD0; //RTC address with Write command
0x0112	0x30D0      	MOVLW      208
0x0113	0x1283      	BCF        STATUS, 5
0x0114	0x0093      	MOVWF      SSPBUF
;MyProject.c,418 :: 		while(SSPSTAT & 0x04); //Wait for transfer to complete
L_I2C_update_time82:
0x0115	0x1683      	BSF        STATUS, 5
0x0116	0x1D14      	BTFSS      SSPSTAT, 2
0x0117	0x2919      	GOTO       L_I2C_update_time83
0x0118	0x2915      	GOTO       L_I2C_update_time82
L_I2C_update_time83:
;MyProject.c,420 :: 		SSPBUF = 0x00; //RTC seconds register address
0x0119	0x1283      	BCF        STATUS, 5
0x011A	0x0193      	CLRF       SSPBUF
;MyProject.c,421 :: 		while(SSPSTAT & 0x04); //Wait for transfer to complete
L_I2C_update_time84:
0x011B	0x1683      	BSF        STATUS, 5
0x011C	0x1D14      	BTFSS      SSPSTAT, 2
0x011D	0x291F      	GOTO       L_I2C_update_time85
0x011E	0x291B      	GOTO       L_I2C_update_time84
L_I2C_update_time85:
;MyProject.c,423 :: 		RSEN_bit = 1; //Repeat start
0x011F	0x1491      	BSF        RSEN_bit, BitPos(RSEN_bit+0)
;MyProject.c,424 :: 		while(RSEN_bit);//Wait for Repeat Start condition to complete
L_I2C_update_time86:
0x0120	0x1C91      	BTFSS      RSEN_bit, BitPos(RSEN_bit+0)
0x0121	0x2923      	GOTO       L_I2C_update_time87
0x0122	0x2920      	GOTO       L_I2C_update_time86
L_I2C_update_time87:
;MyProject.c,426 :: 		SSPBUF = 0xD1; //RTC add with read command
0x0123	0x30D1      	MOVLW      209
0x0124	0x1283      	BCF        STATUS, 5
0x0125	0x0093      	MOVWF      SSPBUF
;MyProject.c,427 :: 		while(SSPSTAT & 0x04);//Wait for transfer to complete
L_I2C_update_time88:
0x0126	0x1683      	BSF        STATUS, 5
0x0127	0x1D14      	BTFSS      SSPSTAT, 2
0x0128	0x292A      	GOTO       L_I2C_update_time89
0x0129	0x2926      	GOTO       L_I2C_update_time88
L_I2C_update_time89:
;MyProject.c,430 :: 		RCEN_bit = 1; //Receive enable
0x012A	0x1591      	BSF        RCEN_bit, BitPos(RCEN_bit+0)
;MyProject.c,431 :: 		while(RCEN_bit);//wait till the data is received
L_I2C_update_time90:
0x012B	0x1D91      	BTFSS      RCEN_bit, BitPos(RCEN_bit+0)
0x012C	0x292E      	GOTO       L_I2C_update_time91
0x012D	0x292B      	GOTO       L_I2C_update_time90
L_I2C_update_time91:
;MyProject.c,433 :: 		ACKDT_bit = 0;
0x012E	0x1291      	BCF        ACKDT_bit, BitPos(ACKDT_bit+0)
;MyProject.c,434 :: 		ACKEN_bit = 1;//Send ACKDT ack
0x012F	0x1611      	BSF        ACKEN_bit, BitPos(ACKEN_bit+0)
;MyProject.c,435 :: 		while(ACKEN_bit); //ACK
L_I2C_update_time92:
0x0130	0x1E11      	BTFSS      ACKEN_bit, BitPos(ACKEN_bit+0)
0x0131	0x2933      	GOTO       L_I2C_update_time93
0x0132	0x2930      	GOTO       L_I2C_update_time92
L_I2C_update_time93:
;MyProject.c,438 :: 		bcd = SSPBUF;
0x0133	0x1283      	BCF        STATUS, 5
0x0134	0x0813      	MOVF       SSPBUF, 0
0x0135	0x00AA      	MOVWF      _bcd
0x0136	0x01AB      	CLRF       _bcd+1
;MyProject.c,439 :: 		lower_nib = bcd & 0x0F;
0x0137	0x300F      	MOVLW      15
0x0138	0x052A      	ANDWF      _bcd, 0
0x0139	0x00AE      	MOVWF      FLOC__I2C_update_time
0x013A	0x082B      	MOVF       _bcd+1, 0
0x013B	0x00AF      	MOVWF      FLOC__I2C_update_time+1
0x013C	0x3000      	MOVLW      0
0x013D	0x05AF      	ANDWF      FLOC__I2C_update_time+1, 1
0x013E	0x082E      	MOVF       FLOC__I2C_update_time, 0
0x013F	0x00A8      	MOVWF      _lower_nib
0x0140	0x082F      	MOVF       FLOC__I2C_update_time+1, 0
0x0141	0x00A9      	MOVWF      _lower_nib+1
;MyProject.c,440 :: 		timer_overflow_seconds = (bcd >> 4)*10;
0x0142	0x082A      	MOVF       _bcd, 0
0x0143	0x00F0      	MOVWF      R0
0x0144	0x082B      	MOVF       _bcd+1, 0
0x0145	0x00F1      	MOVWF      R0+1
0x0146	0x0CF1      	RRF        R0+1, 1
0x0147	0x0CF0      	RRF        R0, 1
0x0148	0x13F1      	BCF        R0+1, 7
0x0149	0x0CF1      	RRF        R0+1, 1
0x014A	0x0CF0      	RRF        R0, 1
0x014B	0x13F1      	BCF        R0+1, 7
0x014C	0x0CF1      	RRF        R0+1, 1
0x014D	0x0CF0      	RRF        R0, 1
0x014E	0x13F1      	BCF        R0+1, 7
0x014F	0x0CF1      	RRF        R0+1, 1
0x0150	0x0CF0      	RRF        R0, 1
0x0151	0x13F1      	BCF        R0+1, 7
0x0152	0x300A      	MOVLW      10
0x0153	0x00F4      	MOVWF      R4
0x0154	0x3000      	MOVLW      0
0x0155	0x00F5      	MOVWF      R4+1
0x0156	0x2067      	CALL       _Mul_16X16_U
0x0157	0x0870      	MOVF       R0, 0
0x0158	0x00A0      	MOVWF      _timer_overflow_seconds
0x0159	0x0871      	MOVF       R0+1, 0
0x015A	0x00A1      	MOVWF      _timer_overflow_seconds+1
;MyProject.c,441 :: 		timer_overflow_seconds += lower_nib;
0x015B	0x082E      	MOVF       FLOC__I2C_update_time, 0
0x015C	0x07F0      	ADDWF      R0, 1
0x015D	0x082F      	MOVF       FLOC__I2C_update_time+1, 0
0x015E	0x1803      	BTFSC      STATUS, 0
0x015F	0x3E01      	ADDLW      1
0x0160	0x07F1      	ADDWF      R0+1, 1
0x0161	0x0870      	MOVF       R0, 0
0x0162	0x00A0      	MOVWF      _timer_overflow_seconds
0x0163	0x0871      	MOVF       R0+1, 0
0x0164	0x00A1      	MOVWF      _timer_overflow_seconds+1
;MyProject.c,442 :: 		timer_overflow_seconds = 0xFF - (60 - timer_overflow_seconds);
0x0165	0x0870      	MOVF       R0, 0
0x0166	0x3C3C      	SUBLW      60
0x0167	0x00F0      	MOVWF      R0
0x0168	0x0871      	MOVF       R0+1, 0
0x0169	0x1C03      	BTFSS      STATUS, 0
0x016A	0x3E01      	ADDLW      1
0x016B	0x01F1      	CLRF       R0+1
0x016C	0x02F1      	SUBWF      R0+1, 1
0x016D	0x0870      	MOVF       R0, 0
0x016E	0x3CFF      	SUBLW      255
0x016F	0x00A0      	MOVWF      _timer_overflow_seconds
0x0170	0x0871      	MOVF       R0+1, 0
0x0171	0x1C03      	BTFSS      STATUS, 0
0x0172	0x3E01      	ADDLW      1
0x0173	0x01A1      	CLRF       _timer_overflow_seconds+1
0x0174	0x02A1      	SUBWF      _timer_overflow_seconds+1, 1
;MyProject.c,446 :: 		RCEN_bit = 1; //Receive enable
0x0175	0x1683      	BSF        STATUS, 5
0x0176	0x1591      	BSF        RCEN_bit, BitPos(RCEN_bit+0)
;MyProject.c,447 :: 		while(RCEN_bit);//wait till the data is received
L_I2C_update_time94:
0x0177	0x1D91      	BTFSS      RCEN_bit, BitPos(RCEN_bit+0)
0x0178	0x297A      	GOTO       L_I2C_update_time95
0x0179	0x2977      	GOTO       L_I2C_update_time94
L_I2C_update_time95:
;MyProject.c,449 :: 		ACKDT_bit = 0;
0x017A	0x1291      	BCF        ACKDT_bit, BitPos(ACKDT_bit+0)
;MyProject.c,450 :: 		ACKEN_bit = 1;//Send ACKDT ack
0x017B	0x1611      	BSF        ACKEN_bit, BitPos(ACKEN_bit+0)
;MyProject.c,451 :: 		while(ACKEN_bit); //ACK
L_I2C_update_time96:
0x017C	0x1E11      	BTFSS      ACKEN_bit, BitPos(ACKEN_bit+0)
0x017D	0x297F      	GOTO       L_I2C_update_time97
0x017E	0x297C      	GOTO       L_I2C_update_time96
L_I2C_update_time97:
;MyProject.c,453 :: 		rtc_min_set = SSPBUF; //Update the minutes global variable
0x017F	0x1283      	BCF        STATUS, 5
0x0180	0x0813      	MOVF       SSPBUF, 0
0x0181	0x00A2      	MOVWF      _rtc_min_set
;MyProject.c,456 :: 		RCEN_bit = 1; //Receive enable
0x0182	0x1683      	BSF        STATUS, 5
0x0183	0x1591      	BSF        RCEN_bit, BitPos(RCEN_bit+0)
;MyProject.c,457 :: 		while(RCEN_bit);//wait till the data is received
L_I2C_update_time98:
0x0184	0x1D91      	BTFSS      RCEN_bit, BitPos(RCEN_bit+0)
0x0185	0x2987      	GOTO       L_I2C_update_time99
0x0186	0x2984      	GOTO       L_I2C_update_time98
L_I2C_update_time99:
;MyProject.c,459 :: 		ACKDT_bit = 1;//No more registers to read so send NACK
0x0187	0x1691      	BSF        ACKDT_bit, BitPos(ACKDT_bit+0)
;MyProject.c,460 :: 		ACKEN_bit = 1;//Send the ACKDT to slave
0x0188	0x1611      	BSF        ACKEN_bit, BitPos(ACKEN_bit+0)
;MyProject.c,461 :: 		while(ACKEN_bit); //Wait for NACK to completely transfer
L_I2C_update_time100:
0x0189	0x1E11      	BTFSS      ACKEN_bit, BitPos(ACKEN_bit+0)
0x018A	0x298C      	GOTO       L_I2C_update_time101
0x018B	0x2989      	GOTO       L_I2C_update_time100
L_I2C_update_time101:
;MyProject.c,463 :: 		rtc_hour_set = SSPBUF; //Update the hour global variable
0x018C	0x1283      	BCF        STATUS, 5
0x018D	0x0813      	MOVF       SSPBUF, 0
0x018E	0x00A5      	MOVWF      _rtc_hour_set
;MyProject.c,465 :: 		PEN_bit = 1;//Enable stop condition
0x018F	0x1683      	BSF        STATUS, 5
0x0190	0x1511      	BSF        PEN_bit, BitPos(PEN_bit+0)
;MyProject.c,466 :: 		while(PEN_bit); //Wait for stop condition to complete
L_I2C_update_time102:
0x0191	0x1D11      	BTFSS      PEN_bit, BitPos(PEN_bit+0)
0x0192	0x2994      	GOTO       L_I2C_update_time103
0x0193	0x2991      	GOTO       L_I2C_update_time102
L_I2C_update_time103:
;MyProject.c,467 :: 		}
L_end_I2C_update_time:
0x0194	0x0008      	RETURN
; end of _I2C_update_time
_Div_16x16_S:
;__Lib_Math.c,480 :: 		
;__Lib_Math.c,488 :: 		
0x0195	0x1283      	BCF        STATUS, 5
0x0196	0x1303      	BCF        STATUS, 6
0x0197	0x0874      	MOVF       R4, 0
0x0198	0x3A00      	XORLW      0
0x0199	0x1D03      	BTFSS      STATUS, 2
0x019A	0x29A4      	GOTO       L_Div_16x16_S0
;__Lib_Math.c,489 :: 		
0x019B	0x0875      	MOVF       R5, 0
0x019C	0x3A00      	XORLW      0
0x019D	0x1D03      	BTFSS      STATUS, 2
0x019E	0x29A4      	GOTO       L_Div_16x16_S1
;__Lib_Math.c,490 :: 		
0x019F	0x30FF      	MOVLW      255
0x01A0	0x00F0      	MOVWF      R0
;__Lib_Math.c,491 :: 		
0x01A1	0x307F      	MOVLW      127
0x01A2	0x00F1      	MOVWF      R1
;__Lib_Math.c,492 :: 		
0x01A3	0x29FD      	GOTO       L_end_Div_16x16_S
;__Lib_Math.c,493 :: 		
L_Div_16x16_S1:
L_Div_16x16_S0:
;__Lib_Math.c,496 :: 		
0x01A4	0x1283      	BCF        STATUS, 5
;__Lib_Math.c,497 :: 		
0x01A5	0x1303      	BCF        STATUS, 6
;__Lib_Math.c,498 :: 		
0x01A6	0x01FD      	CLRF       R13
;__Lib_Math.c,499 :: 		
0x01A7	0x01F9      	CLRF       R9
;__Lib_Math.c,500 :: 		
0x01A8	0x01F8      	CLRF       R8
;__Lib_Math.c,501 :: 		
0x01A9	0x0871      	MOVF       R1, 0
;__Lib_Math.c,502 :: 		
0x01AA	0x0470      	IORWF      R0, 0
;__Lib_Math.c,503 :: 		
0x01AB	0x1903      	BTFSC      STATUS, 2
;__Lib_Math.c,504 :: 		
0x01AC	0x3400      	RETLW      0
;__Lib_Math.c,506 :: 		
0x01AD	0x0871      	MOVF       R1, 0
;__Lib_Math.c,507 :: 		
0x01AE	0x0675      	XORWF      R5, 0
;__Lib_Math.c,508 :: 		
0x01AF	0x00FA      	MOVWF      R10
;__Lib_Math.c,509 :: 		
0x01B0	0x1BFA      	BTFSC      R10, 7
;__Lib_Math.c,510 :: 		
0x01B1	0x09FD      	COMF       R13, 1
;__Lib_Math.c,512 :: 		
0x01B2	0x01FB      	CLRF       R11
;__Lib_Math.c,514 :: 		
0x01B3	0x1FF5      	BTFSS      R5, 7
;__Lib_Math.c,515 :: 		
0x01B4	0x29BA      	GOTO       $+6
;__Lib_Math.c,517 :: 		
0x01B5	0x09F4      	COMF       R4, 1
;__Lib_Math.c,518 :: 		
0x01B6	0x09F5      	COMF       R5, 1
;__Lib_Math.c,519 :: 		
0x01B7	0x0AF4      	INCF       R4, 1
;__Lib_Math.c,520 :: 		
0x01B8	0x1903      	BTFSC      STATUS, 2
;__Lib_Math.c,521 :: 		
0x01B9	0x0AF5      	INCF       R5, 1
;__Lib_Math.c,523 :: 		
0x01BA	0x1FF1      	BTFSS      R1, 7
;__Lib_Math.c,524 :: 		
0x01BB	0x29C1      	GOTO       $+6
;__Lib_Math.c,526 :: 		
0x01BC	0x09F0      	COMF       R0, 1
;__Lib_Math.c,527 :: 		
0x01BD	0x09F1      	COMF       R1, 1
;__Lib_Math.c,528 :: 		
0x01BE	0x0AF0      	INCF       R0, 1
;__Lib_Math.c,529 :: 		
0x01BF	0x1903      	BTFSC      STATUS, 2
;__Lib_Math.c,530 :: 		
0x01C0	0x0AF1      	INCF       R1, 1
;__Lib_Math.c,532 :: 		
0x01C1	0x0871      	MOVF       R1, 0
;__Lib_Math.c,533 :: 		
0x01C2	0x0475      	IORWF      R5, 0
;__Lib_Math.c,534 :: 		
0x01C3	0x00FA      	MOVWF      R10
;__Lib_Math.c,535 :: 		
0x01C4	0x1BFA      	BTFSC      R10, 7
;__Lib_Math.c,536 :: 		
0x01C5	0x29D6      	GOTO       $+17
;__Lib_Math.c,538 :: 		
0x01C6	0x200D      	CALL       _Div_16x16_S_L
;__Lib_Math.c,540 :: 		
0x01C7	0x187B      	BTFSC      R11, 0
;__Lib_Math.c,541 :: 		
0x01C8	0x29E9      	GOTO       $+33
;__Lib_Math.c,543 :: 		
0x01C9	0x1FFD      	BTFSS      R13, 7
;__Lib_Math.c,544 :: 		
0x01CA	0x3400      	RETLW      0
;__Lib_Math.c,546 :: 		
0x01CB	0x09F0      	COMF       R0, 1
;__Lib_Math.c,547 :: 		
0x01CC	0x09F1      	COMF       R1, 1
;__Lib_Math.c,548 :: 		
0x01CD	0x0AF0      	INCF       R0, 1
;__Lib_Math.c,549 :: 		
0x01CE	0x1903      	BTFSC      STATUS, 2
;__Lib_Math.c,550 :: 		
0x01CF	0x0AF1      	INCF       R1, 1
;__Lib_Math.c,552 :: 		
0x01D0	0x09F8      	COMF       R8, 1
;__Lib_Math.c,553 :: 		
0x01D1	0x09F9      	COMF       R9, 1
;__Lib_Math.c,554 :: 		
0x01D2	0x0AF8      	INCF       R8, 1
;__Lib_Math.c,555 :: 		
0x01D3	0x1903      	BTFSC      STATUS, 2
;__Lib_Math.c,556 :: 		
0x01D4	0x0AF9      	INCF       R9, 1
;__Lib_Math.c,558 :: 		
0x01D5	0x3400      	RETLW      0
;__Lib_Math.c,560 :: 		
0x01D6	0x1FF5      	BTFSS      R5, 7
;__Lib_Math.c,561 :: 		
0x01D7	0x29E5      	GOTO       $+14
;__Lib_Math.c,562 :: 		
0x01D8	0x1BF1      	BTFSC      R1, 7
;__Lib_Math.c,563 :: 		
0x01D9	0x29E1      	GOTO       $+8
;__Lib_Math.c,564 :: 		
0x01DA	0x0871      	MOVF       R1, 0
;__Lib_Math.c,565 :: 		
0x01DB	0x00F9      	MOVWF      R9
;__Lib_Math.c,566 :: 		
0x01DC	0x0870      	MOVF       R0, 0
;__Lib_Math.c,567 :: 		
0x01DD	0x00F8      	MOVWF      R8
;__Lib_Math.c,568 :: 		
0x01DE	0x01F1      	CLRF       R1
;__Lib_Math.c,569 :: 		
0x01DF	0x01F0      	CLRF       R0
;__Lib_Math.c,570 :: 		
0x01E0	0x29C9      	GOTO       $-23
;__Lib_Math.c,571 :: 		
0x01E1	0x01F1      	CLRF       R1
;__Lib_Math.c,572 :: 		
0x01E2	0x01F0      	CLRF       R0
;__Lib_Math.c,573 :: 		
0x01E3	0x0AF0      	INCF       R0, 1
;__Lib_Math.c,574 :: 		
0x01E4	0x3400      	RETLW      0
;__Lib_Math.c,576 :: 		
0x01E5	0x09F1      	COMF       R1, 1
;__Lib_Math.c,577 :: 		
0x01E6	0x09F0      	COMF       R0, 1
;__Lib_Math.c,578 :: 		
0x01E7	0x0AFB      	INCF       R11, 1
;__Lib_Math.c,579 :: 		
0x01E8	0x29C6      	GOTO       $-34
;__Lib_Math.c,581 :: 		
0x01E9	0x0AF8      	INCF       R8, 1
;__Lib_Math.c,582 :: 		
0x01EA	0x1903      	BTFSC      STATUS, 2
;__Lib_Math.c,583 :: 		
0x01EB	0x0AF9      	INCF       R9, 1
;__Lib_Math.c,584 :: 		
0x01EC	0x0874      	MOVF       R4, 0
;__Lib_Math.c,585 :: 		
0x01ED	0x0278      	SUBWF      R8, 0
;__Lib_Math.c,586 :: 		
0x01EE	0x1D03      	BTFSS      STATUS, 2
;__Lib_Math.c,587 :: 		
0x01EF	0x29C9      	GOTO       $-38
;__Lib_Math.c,588 :: 		
0x01F0	0x0875      	MOVF       R5, 0
;__Lib_Math.c,589 :: 		
0x01F1	0x0279      	SUBWF      R9, 0
;__Lib_Math.c,590 :: 		
0x01F2	0x1D03      	BTFSS      STATUS, 2
;__Lib_Math.c,591 :: 		
0x01F3	0x29C9      	GOTO       $-42
;__Lib_Math.c,592 :: 		
0x01F4	0x01F9      	CLRF       R9
;__Lib_Math.c,593 :: 		
0x01F5	0x01F8      	CLRF       R8
;__Lib_Math.c,594 :: 		
0x01F6	0x0AF0      	INCF       R0, 1
;__Lib_Math.c,595 :: 		
0x01F7	0x1903      	BTFSC      STATUS, 2
;__Lib_Math.c,596 :: 		
0x01F8	0x0AF1      	INCF       R1, 1
;__Lib_Math.c,597 :: 		
0x01F9	0x1FF1      	BTFSS      R1, 7
;__Lib_Math.c,598 :: 		
0x01FA	0x29C9      	GOTO       $-49
;__Lib_Math.c,599 :: 		
0x01FB	0x0000      	NOP
;__Lib_Math.c,600 :: 		
0x01FC	0x34FF      	RETLW      255
;__Lib_Math.c,602 :: 		
L_end_Div_16x16_S:
0x01FD	0x0008      	RETURN
; end of _Div_16x16_S
_main:
0x01FE	0x30C4      	MOVLW      196
0x01FF	0x1283      	BCF        STATUS, 5
0x0200	0x1303      	BCF        STATUS, 6
0x0201	0x00A0      	MOVWF      _timer_overflow_seconds
0x0202	0x01A1      	CLRF       33
0x0203	0x01A2      	CLRF       _rtc_min_set
0x0204	0x01A3      	CLRF       _rtc_temp_set
0x0205	0x3001      	MOVLW      1
0x0206	0x00A4      	MOVWF      _time_set_digit_addr
0x0207	0x01A5      	CLRF       _rtc_hour_set
;MyProject.c,29 :: 		void main() {
;MyProject.c,31 :: 		PORTC = 0x00;//Clear the Port
0x0208	0x0187      	CLRF       PORTC
;MyProject.c,32 :: 		TRISC.F5 = 0;  //configured as O/P for SDO
0x0209	0x1683      	BSF        STATUS, 5
0x020A	0x1287      	BCF        TRISC, 5
;MyProject.c,34 :: 		ANS4_bit = 0; //Digital IO
0x020B	0x1703      	BSF        STATUS, 6
0x020C	0x1208      	BCF        ANS4_bit, BitPos(ANS4_bit+0)
;MyProject.c,35 :: 		TRISA.F5 = 0; //configure as LOAD pin to MAX7219
0x020D	0x1303      	BCF        STATUS, 6
0x020E	0x1285      	BCF        TRISA, 5
;MyProject.c,36 :: 		PORTA.F5 = 1; //Pin is default HIGH
0x020F	0x1283      	BCF        STATUS, 5
0x0210	0x1685      	BSF        PORTA, 5
;MyProject.c,38 :: 		CKE_bit = 1; //Transmit data on rising edge of CLK (For SPI)
0x0211	0x1683      	BSF        STATUS, 5
0x0212	0x1714      	BSF        CKE_bit, BitPos(CKE_bit+0)
;MyProject.c,39 :: 		SSPADD = 0x15;//Clock speed of approx. 45kHz (For I2C BRG)
0x0213	0x3015      	MOVLW      21
0x0214	0x0093      	MOVWF      SSPADD
;MyProject.c,43 :: 		I2C_init();
0x0215	0x2003      	CALL       _I2C_init
;MyProject.c,44 :: 		delay_ms(20); //Wait for RTC clock to stabilize
0x0216	0x301A      	MOVLW      26
0x0217	0x00FC      	MOVWF      R12
0x0218	0x30F8      	MOVLW      248
0x0219	0x00FD      	MOVWF      R13
L_main0:
0x021A	0x0BFD      	DECFSZ     R13, 1
0x021B	0x2A1A      	GOTO       L_main0
0x021C	0x0BFC      	DECFSZ     R12, 1
0x021D	0x2A1A      	GOTO       L_main0
0x021E	0x0000      	NOP
;MyProject.c,46 :: 		SEN_bit = 1;    //Enable a start condition
0x021F	0x1683      	BSF        STATUS, 5
0x0220	0x1411      	BSF        SEN_bit, BitPos(SEN_bit+0)
;MyProject.c,47 :: 		while(SEN_bit); //wait for start condition to complete
L_main1:
0x0221	0x1C11      	BTFSS      SEN_bit, BitPos(SEN_bit+0)
0x0222	0x2A24      	GOTO       L_main2
0x0223	0x2A21      	GOTO       L_main1
L_main2:
;MyProject.c,49 :: 		SSPBUF = 0xD0;  //RTC add with write command
0x0224	0x30D0      	MOVLW      208
0x0225	0x1283      	BCF        STATUS, 5
0x0226	0x0093      	MOVWF      SSPBUF
;MyProject.c,50 :: 		while(SSPSTAT & 0x04); //Wait till transfer is complete
L_main3:
0x0227	0x1683      	BSF        STATUS, 5
0x0228	0x1D14      	BTFSS      SSPSTAT, 2
0x0229	0x2A2B      	GOTO       L_main4
0x022A	0x2A27      	GOTO       L_main3
L_main4:
;MyProject.c,52 :: 		SSPBUF = 0x07;  //RTC SQWOut register address
0x022B	0x3007      	MOVLW      7
0x022C	0x1283      	BCF        STATUS, 5
0x022D	0x0093      	MOVWF      SSPBUF
;MyProject.c,53 :: 		while(SSPSTAT & 0x04); //Wait till transfer is complete
L_main5:
0x022E	0x1683      	BSF        STATUS, 5
0x022F	0x1D14      	BTFSS      SSPSTAT, 2
0x0230	0x2A32      	GOTO       L_main6
0x0231	0x2A2E      	GOTO       L_main5
L_main6:
;MyProject.c,55 :: 		SSPBUF = 0x90;  //Enable 1Hz clock
0x0232	0x3090      	MOVLW      144
0x0233	0x1283      	BCF        STATUS, 5
0x0234	0x0093      	MOVWF      SSPBUF
;MyProject.c,56 :: 		while(SSPSTAT & 0x04); //Wait till transfer is complete
L_main7:
0x0235	0x1683      	BSF        STATUS, 5
0x0236	0x1D14      	BTFSS      SSPSTAT, 2
0x0237	0x2A39      	GOTO       L_main8
0x0238	0x2A35      	GOTO       L_main7
L_main8:
;MyProject.c,58 :: 		PEN_bit = 1;    //Enable a stop condition
0x0239	0x1511      	BSF        PEN_bit, BitPos(PEN_bit+0)
;MyProject.c,59 :: 		while(PEN_bit); //wait for stop condition to complete
L_main9:
0x023A	0x1D11      	BTFSS      PEN_bit, BitPos(PEN_bit+0)
0x023B	0x2A3D      	GOTO       L_main10
0x023C	0x2A3A      	GOTO       L_main9
L_main10:
;MyProject.c,61 :: 		I2C_update_time();
0x023D	0x210C      	CALL       _I2C_update_time
;MyProject.c,63 :: 		PORTC.F0 = 0; //Clear the T1CKI port pin
0x023E	0x1283      	BCF        STATUS, 5
0x023F	0x1007      	BCF        PORTC, 0
;MyProject.c,64 :: 		TRISC.F0 = 1; //Configure T1CKI as an Input pin
0x0240	0x1683      	BSF        STATUS, 5
0x0241	0x1407      	BSF        TRISC, 0
;MyProject.c,66 :: 		TMR1CS_bit = 1;//Use external clock. Configured as a Counter
0x0242	0x1283      	BCF        STATUS, 5
0x0243	0x1490      	BSF        TMR1CS_bit, BitPos(TMR1CS_bit+0)
;MyProject.c,67 :: 		T1SYNC_bit = 1;//Do not synchronize the external clock
0x0244	0x1510      	BSF        T1SYNC_bit, BitPos(T1SYNC_bit+0)
;MyProject.c,69 :: 		TMR1IE_bit = 1;//Enable overflow interrupt
0x0245	0x1683      	BSF        STATUS, 5
0x0246	0x140C      	BSF        TMR1IE_bit, BitPos(TMR1IE_bit+0)
;MyProject.c,70 :: 		PEIE_bit = 1;//Enable Peripheral Interrupt
0x0247	0x170B      	BSF        PEIE_bit, BitPos(PEIE_bit+0)
;MyProject.c,74 :: 		TMR1H = 0xFF;
0x0248	0x30FF      	MOVLW      255
0x0249	0x1283      	BCF        STATUS, 5
0x024A	0x008F      	MOVWF      TMR1H
;MyProject.c,75 :: 		TMR1L = timer_overflow_seconds;
0x024B	0x0820      	MOVF       _timer_overflow_seconds, 0
0x024C	0x008E      	MOVWF      TMR1L
;MyProject.c,77 :: 		TMR1IF_bit = 0;//Clear Timer1/Counter1 overflow interrupt
0x024D	0x100C      	BCF        TMR1IF_bit, BitPos(TMR1IF_bit+0)
;MyProject.c,78 :: 		TMR1ON_bit = 1;//Turn on the Timer
0x024E	0x1410      	BSF        TMR1ON_bit, BitPos(TMR1ON_bit+0)
;MyProject.c,82 :: 		SPI_init();
0x024F	0x2040      	CALL       _SPI_init
;MyProject.c,84 :: 		SPI_tx(0x09, 0xFF);  //Code B Dcoding enabled
0x0250	0x3009      	MOVLW      9
0x0251	0x00B0      	MOVWF      FARG_SPI_tx_addr
0x0252	0x30FF      	MOVLW      255
0x0253	0x00B1      	MOVWF      FARG_SPI_tx_dat
0x0254	0x204A      	CALL       _SPI_tx
;MyProject.c,85 :: 		SPI_tx(0x0B, 0x03); //scan limit to 4 digits
0x0255	0x300B      	MOVLW      11
0x0256	0x00B0      	MOVWF      FARG_SPI_tx_addr
0x0257	0x3003      	MOVLW      3
0x0258	0x00B1      	MOVWF      FARG_SPI_tx_dat
0x0259	0x204A      	CALL       _SPI_tx
;MyProject.c,87 :: 		SPI_update();
0x025A	0x209E      	CALL       _SPI_update
;MyProject.c,89 :: 		SPI_tx(0x0C, 0x01); //disable sleep
0x025B	0x300C      	MOVLW      12
0x025C	0x00B0      	MOVWF      FARG_SPI_tx_addr
0x025D	0x3001      	MOVLW      1
0x025E	0x00B1      	MOVWF      FARG_SPI_tx_dat
0x025F	0x204A      	CALL       _SPI_tx
;MyProject.c,93 :: 		TRISA.F0 = 1;
0x0260	0x1683      	BSF        STATUS, 5
0x0261	0x1405      	BSF        TRISA, 0
;MyProject.c,94 :: 		PORTA.F0 = 1;
0x0262	0x1283      	BCF        STATUS, 5
0x0263	0x1405      	BSF        PORTA, 0
;MyProject.c,95 :: 		ADCS0_bit = 1;//Set the clock to Fosc/8
0x0264	0x171F      	BSF        ADCS0_bit, BitPos(ADCS0_bit+0)
;MyProject.c,98 :: 		ADON_bit = 1; //turn on ADC module
0x0265	0x141F      	BSF        ADON_bit, BitPos(ADON_bit+0)
;MyProject.c,99 :: 		delay_ms(1);//A/D Acquisition time
0x0266	0x3002      	MOVLW      2
0x0267	0x00FC      	MOVWF      R12
0x0268	0x304B      	MOVLW      75
0x0269	0x00FD      	MOVWF      R13
L_main11:
0x026A	0x0BFD      	DECFSZ     R13, 1
0x026B	0x2A6A      	GOTO       L_main11
0x026C	0x0BFC      	DECFSZ     R12, 1
0x026D	0x2A6A      	GOTO       L_main11
;MyProject.c,100 :: 		ADCON0 = ADCON0 | 0x02;                     //start conversion
0x026E	0x149F      	BSF        ADCON0, 1
;MyProject.c,101 :: 		while(ADCON0 & 0x02); //wait for conversion
L_main12:
0x026F	0x1C9F      	BTFSS      ADCON0, 1
0x0270	0x2A72      	GOTO       L_main13
0x0271	0x2A6F      	GOTO       L_main12
L_main13:
;MyProject.c,102 :: 		SPI_tx(0x0A,ADRESH * 15 / 128); //set the intensity. SPI_init() called above.
0x0272	0x300A      	MOVLW      10
0x0273	0x00B0      	MOVWF      FARG_SPI_tx_addr
0x0274	0x081E      	MOVF       ADRESH, 0
0x0275	0x00F0      	MOVWF      R0
0x0276	0x300F      	MOVLW      15
0x0277	0x00F4      	MOVWF      R4
0x0278	0x20C6      	CALL       _Mul_8X8_U
0x0279	0x3080      	MOVLW      128
0x027A	0x00F4      	MOVWF      R4
0x027B	0x01F5      	CLRF       R4+1
0x027C	0x2195      	CALL       _Div_16x16_S
0x027D	0x0870      	MOVF       R0, 0
0x027E	0x00B1      	MOVWF      FARG_SPI_tx_dat
0x027F	0x204A      	CALL       _SPI_tx
;MyProject.c,103 :: 		ADON_bit = 0; //turn offf ADC module
0x0280	0x101F      	BCF        ADON_bit, BitPos(ADON_bit+0)
;MyProject.c,107 :: 		ANS1_bit = 0; //Digital IO
0x0281	0x1683      	BSF        STATUS, 5
0x0282	0x1703      	BSF        STATUS, 6
0x0283	0x1088      	BCF        ANS1_bit, BitPos(ANS1_bit+0)
;MyProject.c,108 :: 		TRISA.F1 = 0;//Configure as Output
0x0284	0x1303      	BCF        STATUS, 6
0x0285	0x1085      	BCF        TRISA, 1
;MyProject.c,109 :: 		PORTA.F1 = 1;//LED is ON
0x0286	0x1283      	BCF        STATUS, 5
0x0287	0x1485      	BSF        PORTA, 1
;MyProject.c,112 :: 		SPBRG = 25; //for 4MHz OSC 9600 baud with 0.16% error
0x0288	0x3019      	MOVLW      25
0x0289	0x1683      	BSF        STATUS, 5
0x028A	0x0099      	MOVWF      SPBRG
;MyProject.c,113 :: 		BRGH_bit = 1;//Enable high speed mode
0x028B	0x1518      	BSF        BRGH_bit, BitPos(BRGH_bit+0)
;MyProject.c,114 :: 		TXEN_bit = 1; //enable transmission
0x028C	0x1698      	BSF        TXEN_bit, BitPos(TXEN_bit+0)
;MyProject.c,115 :: 		CREN_bit = 1; //enable reception
0x028D	0x1283      	BCF        STATUS, 5
0x028E	0x1618      	BSF        CREN_bit, BitPos(CREN_bit+0)
;MyProject.c,119 :: 		ANS12_bit = 0; //Digital IO
0x028F	0x1683      	BSF        STATUS, 5
0x0290	0x1703      	BSF        STATUS, 6
0x0291	0x1209      	BCF        ANS12_bit, BitPos(ANS12_bit+0)
;MyProject.c,120 :: 		ANS10_bit = 0; //Digital IO
0x0292	0x1109      	BCF        ANS10_bit, BitPos(ANS10_bit+0)
;MyProject.c,121 :: 		PORTB.F0 = 0;  //Clear Port Pin
0x0293	0x1283      	BCF        STATUS, 5
0x0294	0x1303      	BCF        STATUS, 6
0x0295	0x1006      	BCF        PORTB, 0
;MyProject.c,122 :: 		TRISB.F0 = 1;  //Configure as an input pin
0x0296	0x1683      	BSF        STATUS, 5
0x0297	0x1406      	BSF        TRISB, 0
;MyProject.c,123 :: 		PORTB.F1 = 0;  //Clear Port Pin
0x0298	0x1283      	BCF        STATUS, 5
0x0299	0x1086      	BCF        PORTB, 1
;MyProject.c,124 :: 		TRISB.F1 = 1;  //Configure as an input pin
0x029A	0x1683      	BSF        STATUS, 5
0x029B	0x1486      	BSF        TRISB, 1
;MyProject.c,125 :: 		WPUB = 0x03; //enable only RB0 and RB1 pullup
0x029C	0x3003      	MOVLW      3
0x029D	0x0095      	MOVWF      WPUB
;MyProject.c,126 :: 		OPTION_REG = OPTION_REG & 0x7F; //Enable pull ups
0x029E	0x307F      	MOVLW      127
0x029F	0x0581      	ANDWF      OPTION_REG, 1
;MyProject.c,128 :: 		INTEDG_bit = 0; //Interrupt on falling edge of INT pin
0x02A0	0x1301      	BCF        INTEDG_bit, BitPos(INTEDG_bit+0)
;MyProject.c,129 :: 		INTF_bit = 0;//Clear the external interrupt flag
0x02A1	0x108B      	BCF        INTF_bit, BitPos(INTF_bit+0)
;MyProject.c,130 :: 		INTE_bit = 1;//Enable external interrupt
0x02A2	0x160B      	BSF        INTE_bit, BitPos(INTE_bit+0)
;MyProject.c,132 :: 		while(1) {
L_main14:
;MyProject.c,133 :: 		PORTA.F1 = ~PORTA.F1;//Toggle MODE LED
0x02A3	0x3002      	MOVLW      2
0x02A4	0x1283      	BCF        STATUS, 5
0x02A5	0x0685      	XORWF      PORTA, 1
;MyProject.c,135 :: 		asm sleep;
0x02A6	0x0063      	SLEEP
;MyProject.c,136 :: 		delay_ms(20);//Debounce
0x02A7	0x301A      	MOVLW      26
0x02A8	0x00FC      	MOVWF      R12
0x02A9	0x30F8      	MOVLW      248
0x02AA	0x00FD      	MOVWF      R13
L_main16:
0x02AB	0x0BFD      	DECFSZ     R13, 1
0x02AC	0x2AAB      	GOTO       L_main16
0x02AD	0x0BFC      	DECFSZ     R12, 1
0x02AE	0x2AAB      	GOTO       L_main16
0x02AF	0x0000      	NOP
;MyProject.c,138 :: 		INTF_bit = 0;//Clear the INT flag
0x02B0	0x108B      	BCF        INTF_bit, BitPos(INTF_bit+0)
;MyProject.c,140 :: 		PORTA.F1 = ~PORTA.F1;//Toggle MODE LED
0x02B1	0x3002      	MOVLW      2
0x02B2	0x0685      	XORWF      PORTA, 1
;MyProject.c,143 :: 		if (TMR1IF_bit) {
0x02B3	0x1C0C      	BTFSS      TMR1IF_bit, BitPos(TMR1IF_bit+0)
0x02B4	0x2ABF      	GOTO       L_main17
;MyProject.c,144 :: 		TMR1ON_bit = 0; //To prevent write contention turn off the timer
0x02B5	0x1010      	BCF        TMR1ON_bit, BitPos(TMR1ON_bit+0)
;MyProject.c,148 :: 		TMR1H = 0xFF;
0x02B6	0x30FF      	MOVLW      255
0x02B7	0x008F      	MOVWF      TMR1H
;MyProject.c,149 :: 		TMR1L = SECONDS_OVERFLOW_VAL;
0x02B8	0x30C4      	MOVLW      196
0x02B9	0x008E      	MOVWF      TMR1L
;MyProject.c,151 :: 		I2C_update_time();//Update the global registers
0x02BA	0x210C      	CALL       _I2C_update_time
;MyProject.c,152 :: 		SPI_update(); //Update the MAX7219 driver
0x02BB	0x209E      	CALL       _SPI_update
;MyProject.c,154 :: 		TMR1IF_bit = 0;//Clear Timer1/Counter1 overflow interrupt
0x02BC	0x100C      	BCF        TMR1IF_bit, BitPos(TMR1IF_bit+0)
;MyProject.c,155 :: 		TMR1ON_bit = 1;//Turn on the Timer
0x02BD	0x1410      	BSF        TMR1ON_bit, BitPos(TMR1ON_bit+0)
;MyProject.c,156 :: 		}
0x02BE	0x2C46      	GOTO       L_main18
L_main17:
;MyProject.c,158 :: 		else if (PORTB.F1) {
0x02BF	0x1C86      	BTFSS      PORTB, 1
0x02C0	0x2B66      	GOTO       L_main19
;MyProject.c,162 :: 		TMR1ON_bit = 0;//Turn off the timer
0x02C1	0x1010      	BCF        TMR1ON_bit, BitPos(TMR1ON_bit+0)
;MyProject.c,164 :: 		TMR1H = 0xFF;
0x02C2	0x30FF      	MOVLW      255
0x02C3	0x008F      	MOVWF      TMR1H
;MyProject.c,165 :: 		TMR1L = SECONDS_OVERFLOW_VAL;
0x02C4	0x30C4      	MOVLW      196
0x02C5	0x008E      	MOVWF      TMR1L
;MyProject.c,166 :: 		TMR1IF_bit = 0;//Clear Timer1/Counter1 overflow interrupt
0x02C6	0x100C      	BCF        TMR1IF_bit, BitPos(TMR1IF_bit+0)
;MyProject.c,169 :: 		SPI_init();
0x02C7	0x2040      	CALL       _SPI_init
;MyProject.c,170 :: 		SPI_tx(0x01,0x00);//Digit 0 will display 0
0x02C8	0x3001      	MOVLW      1
0x02C9	0x00B0      	MOVWF      FARG_SPI_tx_addr
0x02CA	0x01B1      	CLRF       FARG_SPI_tx_dat
0x02CB	0x204A      	CALL       _SPI_tx
;MyProject.c,172 :: 		SPI_tx(0x02,0x0A);
0x02CC	0x3002      	MOVLW      2
0x02CD	0x00B0      	MOVWF      FARG_SPI_tx_addr
0x02CE	0x300A      	MOVLW      10
0x02CF	0x00B1      	MOVWF      FARG_SPI_tx_dat
0x02D0	0x204A      	CALL       _SPI_tx
;MyProject.c,173 :: 		SPI_tx(0x03,0x0A);
0x02D1	0x3003      	MOVLW      3
0x02D2	0x00B0      	MOVWF      FARG_SPI_tx_addr
0x02D3	0x300A      	MOVLW      10
0x02D4	0x00B1      	MOVWF      FARG_SPI_tx_dat
0x02D5	0x204A      	CALL       _SPI_tx
;MyProject.c,174 :: 		SPI_tx(0x04,0x0A);
0x02D6	0x3004      	MOVLW      4
0x02D7	0x00B0      	MOVWF      FARG_SPI_tx_addr
0x02D8	0x300A      	MOVLW      10
0x02D9	0x00B1      	MOVWF      FARG_SPI_tx_dat
0x02DA	0x204A      	CALL       _SPI_tx
;MyProject.c,177 :: 		rtc_hour_set = 0;
0x02DB	0x01A5      	CLRF       _rtc_hour_set
;MyProject.c,178 :: 		rtc_min_set = 0;
0x02DC	0x01A2      	CLRF       _rtc_min_set
;MyProject.c,180 :: 		while(1) {
L_main20:
;MyProject.c,183 :: 		asm sleep; //sleep till switch is clicked
0x02DD	0x0063      	SLEEP
;MyProject.c,184 :: 		delay_ms(20);//Debounce
0x02DE	0x301A      	MOVLW      26
0x02DF	0x00FC      	MOVWF      R12
0x02E0	0x30F8      	MOVLW      248
0x02E1	0x00FD      	MOVWF      R13
L_main22:
0x02E2	0x0BFD      	DECFSZ     R13, 1
0x02E3	0x2AE2      	GOTO       L_main22
0x02E4	0x0BFC      	DECFSZ     R12, 1
0x02E5	0x2AE2      	GOTO       L_main22
0x02E6	0x0000      	NOP
;MyProject.c,185 :: 		INTF_bit = 0;//Clear the INT flag
0x02E7	0x108B      	BCF        INTF_bit, BitPos(INTF_bit+0)
;MyProject.c,187 :: 		if (~PORTB.F1){
0x02E8	0x1886      	BTFSC      PORTB, 1
0x02E9	0x2AEC      	GOTO       L__main107
0x02EA	0x1403      	BSF        STATUS, 0
0x02EB	0x2AED      	GOTO       L__main108
L__main107:
0x02EC	0x1003      	BCF        STATUS, 0
L__main108:
0x02ED	0x1C03      	BTFSS      STATUS, 0
0x02EE	0x2B02      	GOTO       L_main23
;MyProject.c,190 :: 		++time_set_digit_addr;
0x02EF	0x0AA4      	INCF       _time_set_digit_addr, 1
;MyProject.c,191 :: 		if (time_set_digit_addr > 4){
0x02F0	0x0824      	MOVF       _time_set_digit_addr, 0
0x02F1	0x3C04      	SUBLW      4
0x02F2	0x1803      	BTFSC      STATUS, 0
0x02F3	0x2AFC      	GOTO       L_main24
;MyProject.c,193 :: 		I2C_update_rtc(0);
0x02F4	0x01AE      	CLRF       FARG_I2C_update_rtc_sec
0x02F5	0x20DF      	CALL       _I2C_update_rtc
;MyProject.c,194 :: 		TMR1ON_bit = 1;//Turn on the 60 seconds overflow
0x02F6	0x1283      	BCF        STATUS, 5
0x02F7	0x1410      	BSF        TMR1ON_bit, BitPos(TMR1ON_bit+0)
;MyProject.c,197 :: 		time_set_digit_addr = 1;
0x02F8	0x3001      	MOVLW      1
0x02F9	0x00A4      	MOVWF      _time_set_digit_addr
;MyProject.c,198 :: 		rtc_temp_set = 0;
0x02FA	0x01A3      	CLRF       _rtc_temp_set
;MyProject.c,200 :: 		break; //Time Set Complete
0x02FB	0x2B65      	GOTO       L_main21
;MyProject.c,201 :: 		}
L_main24:
;MyProject.c,203 :: 		rtc_temp_set = 0;
0x02FC	0x01A3      	CLRF       _rtc_temp_set
;MyProject.c,205 :: 		SPI_tx(time_set_digit_addr,0x00);//Digit 0 will display 0
0x02FD	0x0824      	MOVF       _time_set_digit_addr, 0
0x02FE	0x00B0      	MOVWF      FARG_SPI_tx_addr
0x02FF	0x01B1      	CLRF       FARG_SPI_tx_dat
0x0300	0x204A      	CALL       _SPI_tx
;MyProject.c,208 :: 		} else {
0x0301	0x2B64      	GOTO       L_main25
L_main23:
;MyProject.c,212 :: 		switch(time_set_digit_addr) {
0x0302	0x2B4F      	GOTO       L_main26
;MyProject.c,215 :: 		case 1:  if (++rtc_temp_set > 2)
L_main28:
0x0303	0x0AA3      	INCF       _rtc_temp_set, 1
0x0304	0x0823      	MOVF       _rtc_temp_set, 0
0x0305	0x3C02      	SUBLW      2
0x0306	0x1803      	BTFSC      STATUS, 0
0x0307	0x2B09      	GOTO       L_main29
;MyProject.c,216 :: 		rtc_temp_set = 0;//Hour MSB [0 - 2]
0x0308	0x01A3      	CLRF       _rtc_temp_set
L_main29:
;MyProject.c,217 :: 		rtc_hour_set = rtc_temp_set << 4;
0x0309	0x0823      	MOVF       _rtc_temp_set, 0
0x030A	0x00A5      	MOVWF      _rtc_hour_set
0x030B	0x0DA5      	RLF        _rtc_hour_set, 1
0x030C	0x1025      	BCF        _rtc_hour_set, 0
0x030D	0x0DA5      	RLF        _rtc_hour_set, 1
0x030E	0x1025      	BCF        _rtc_hour_set, 0
0x030F	0x0DA5      	RLF        _rtc_hour_set, 1
0x0310	0x1025      	BCF        _rtc_hour_set, 0
0x0311	0x0DA5      	RLF        _rtc_hour_set, 1
0x0312	0x1025      	BCF        _rtc_hour_set, 0
;MyProject.c,218 :: 		break;
0x0313	0x2B5F      	GOTO       L_main27
;MyProject.c,219 :: 		case 2:  ++rtc_temp_set;
L_main30:
0x0314	0x0AA3      	INCF       _rtc_temp_set, 1
;MyProject.c,220 :: 		if ((rtc_hour_set >> 4) == 2 && rtc_temp_set > 3)
0x0315	0x0825      	MOVF       _rtc_hour_set, 0
0x0316	0x00F1      	MOVWF      R1
0x0317	0x0CF1      	RRF        R1, 1
0x0318	0x13F1      	BCF        R1, 7
0x0319	0x0CF1      	RRF        R1, 1
0x031A	0x13F1      	BCF        R1, 7
0x031B	0x0CF1      	RRF        R1, 1
0x031C	0x13F1      	BCF        R1, 7
0x031D	0x0CF1      	RRF        R1, 1
0x031E	0x13F1      	BCF        R1, 7
0x031F	0x0871      	MOVF       R1, 0
0x0320	0x3A02      	XORLW      2
0x0321	0x1D03      	BTFSS      STATUS, 2
0x0322	0x2B29      	GOTO       L_main33
0x0323	0x0823      	MOVF       _rtc_temp_set, 0
0x0324	0x3C03      	SUBLW      3
0x0325	0x1803      	BTFSC      STATUS, 0
0x0326	0x2B29      	GOTO       L_main33
L__main105:
;MyProject.c,221 :: 		rtc_temp_set = 0;//Hour can be max 23
0x0327	0x01A3      	CLRF       _rtc_temp_set
0x0328	0x2B2E      	GOTO       L_main34
L_main33:
;MyProject.c,222 :: 		else if (rtc_temp_set > 9)
0x0329	0x0823      	MOVF       _rtc_temp_set, 0
0x032A	0x3C09      	SUBLW      9
0x032B	0x1803      	BTFSC      STATUS, 0
0x032C	0x2B2E      	GOTO       L_main35
;MyProject.c,223 :: 		rtc_temp_set = 0;//Hour LSB [0 - 9]
0x032D	0x01A3      	CLRF       _rtc_temp_set
L_main35:
L_main34:
;MyProject.c,224 :: 		rtc_hour_set &= 0xF0;
0x032E	0x30F0      	MOVLW      240
0x032F	0x05A5      	ANDWF      _rtc_hour_set, 1
;MyProject.c,225 :: 		rtc_hour_set |= rtc_temp_set;
0x0330	0x0823      	MOVF       _rtc_temp_set, 0
0x0331	0x04A5      	IORWF      _rtc_hour_set, 1
;MyProject.c,226 :: 		break;
0x0332	0x2B5F      	GOTO       L_main27
;MyProject.c,230 :: 		case 3:  if (++rtc_temp_set > 5)
L_main36:
0x0333	0x0AA3      	INCF       _rtc_temp_set, 1
0x0334	0x0823      	MOVF       _rtc_temp_set, 0
0x0335	0x3C05      	SUBLW      5
0x0336	0x1803      	BTFSC      STATUS, 0
0x0337	0x2B39      	GOTO       L_main37
;MyProject.c,231 :: 		rtc_temp_set = 0;//Min MSB [0 - 5]
0x0338	0x01A3      	CLRF       _rtc_temp_set
L_main37:
;MyProject.c,232 :: 		rtc_min_set = rtc_temp_set << 4;
0x0339	0x0823      	MOVF       _rtc_temp_set, 0
0x033A	0x00A2      	MOVWF      _rtc_min_set
0x033B	0x0DA2      	RLF        _rtc_min_set, 1
0x033C	0x1022      	BCF        _rtc_min_set, 0
0x033D	0x0DA2      	RLF        _rtc_min_set, 1
0x033E	0x1022      	BCF        _rtc_min_set, 0
0x033F	0x0DA2      	RLF        _rtc_min_set, 1
0x0340	0x1022      	BCF        _rtc_min_set, 0
0x0341	0x0DA2      	RLF        _rtc_min_set, 1
0x0342	0x1022      	BCF        _rtc_min_set, 0
;MyProject.c,233 :: 		break;
0x0343	0x2B5F      	GOTO       L_main27
;MyProject.c,234 :: 		case 4:  if (++rtc_temp_set > 9)
L_main38:
0x0344	0x0AA3      	INCF       _rtc_temp_set, 1
0x0345	0x0823      	MOVF       _rtc_temp_set, 0
0x0346	0x3C09      	SUBLW      9
0x0347	0x1803      	BTFSC      STATUS, 0
0x0348	0x2B4A      	GOTO       L_main39
;MyProject.c,235 :: 		rtc_temp_set = 0;//Min LSB [0 - 9]
0x0349	0x01A3      	CLRF       _rtc_temp_set
L_main39:
;MyProject.c,236 :: 		rtc_min_set &= 0xF0;
0x034A	0x30F0      	MOVLW      240
0x034B	0x05A2      	ANDWF      _rtc_min_set, 1
;MyProject.c,237 :: 		rtc_min_set |= rtc_temp_set;
0x034C	0x0823      	MOVF       _rtc_temp_set, 0
0x034D	0x04A2      	IORWF      _rtc_min_set, 1
;MyProject.c,238 :: 		break;
0x034E	0x2B5F      	GOTO       L_main27
;MyProject.c,240 :: 		}
L_main26:
0x034F	0x0824      	MOVF       _time_set_digit_addr, 0
0x0350	0x3A01      	XORLW      1
0x0351	0x1903      	BTFSC      STATUS, 2
0x0352	0x2B03      	GOTO       L_main28
0x0353	0x0824      	MOVF       _time_set_digit_addr, 0
0x0354	0x3A02      	XORLW      2
0x0355	0x1903      	BTFSC      STATUS, 2
0x0356	0x2B14      	GOTO       L_main30
0x0357	0x0824      	MOVF       _time_set_digit_addr, 0
0x0358	0x3A03      	XORLW      3
0x0359	0x1903      	BTFSC      STATUS, 2
0x035A	0x2B33      	GOTO       L_main36
0x035B	0x0824      	MOVF       _time_set_digit_addr, 0
0x035C	0x3A04      	XORLW      4
0x035D	0x1903      	BTFSC      STATUS, 2
0x035E	0x2B44      	GOTO       L_main38
L_main27:
;MyProject.c,242 :: 		SPI_tx(time_set_digit_addr,rtc_temp_set);
0x035F	0x0824      	MOVF       _time_set_digit_addr, 0
0x0360	0x00B0      	MOVWF      FARG_SPI_tx_addr
0x0361	0x0823      	MOVF       _rtc_temp_set, 0
0x0362	0x00B1      	MOVWF      FARG_SPI_tx_dat
0x0363	0x204A      	CALL       _SPI_tx
;MyProject.c,243 :: 		}
L_main25:
;MyProject.c,244 :: 		}
0x0364	0x2ADD      	GOTO       L_main20
L_main21:
;MyProject.c,245 :: 		}
0x0365	0x2C46      	GOTO       L_main40
L_main19:
;MyProject.c,259 :: 		TMR1ON_bit = 0;//Turn off the timer
0x0366	0x1010      	BCF        TMR1ON_bit, BitPos(TMR1ON_bit+0)
;MyProject.c,260 :: 		TMR1IF_bit = 0;//Clear Timer1/Counter1 overflow interrupt
0x0367	0x100C      	BCF        TMR1IF_bit, BitPos(TMR1IF_bit+0)
;MyProject.c,263 :: 		SPI_init();
0x0368	0x2040      	CALL       _SPI_init
;MyProject.c,264 :: 		SPI_tx(0x01,0x0A);
0x0369	0x3001      	MOVLW      1
0x036A	0x00B0      	MOVWF      FARG_SPI_tx_addr
0x036B	0x300A      	MOVLW      10
0x036C	0x00B1      	MOVWF      FARG_SPI_tx_dat
0x036D	0x204A      	CALL       _SPI_tx
;MyProject.c,265 :: 		SPI_tx(0x02,0x08);
0x036E	0x3002      	MOVLW      2
0x036F	0x00B0      	MOVWF      FARG_SPI_tx_addr
0x0370	0x3008      	MOVLW      8
0x0371	0x00B1      	MOVWF      FARG_SPI_tx_dat
0x0372	0x204A      	CALL       _SPI_tx
;MyProject.c,266 :: 		SPI_tx(0x03,0x08);
0x0373	0x3003      	MOVLW      3
0x0374	0x00B0      	MOVWF      FARG_SPI_tx_addr
0x0375	0x3008      	MOVLW      8
0x0376	0x00B1      	MOVWF      FARG_SPI_tx_dat
0x0377	0x204A      	CALL       _SPI_tx
;MyProject.c,267 :: 		SPI_tx(0x04,0x0A);
0x0378	0x3004      	MOVLW      4
0x0379	0x00B0      	MOVWF      FARG_SPI_tx_addr
0x037A	0x300A      	MOVLW      10
0x037B	0x00B1      	MOVWF      FARG_SPI_tx_dat
0x037C	0x204A      	CALL       _SPI_tx
;MyProject.c,269 :: 		ADON_bit = 1; //turn on ADC module
0x037D	0x141F      	BSF        ADON_bit, BitPos(ADON_bit+0)
;MyProject.c,271 :: 		while(~INTF_bit){ //Wait till interrupt
L_main41:
0x037E	0x188B      	BTFSC      INTF_bit, BitPos(INTF_bit+0)
0x037F	0x2B82      	GOTO       L__main109
0x0380	0x1403      	BSF        STATUS, 0
0x0381	0x2B83      	GOTO       L__main110
L__main109:
0x0382	0x1003      	BCF        STATUS, 0
L__main110:
0x0383	0x1C03      	BTFSS      STATUS, 0
0x0384	0x2BA0      	GOTO       L_main42
;MyProject.c,272 :: 		delay_ms(1);//A/D Acquisition time
0x0385	0x3002      	MOVLW      2
0x0386	0x00FC      	MOVWF      R12
0x0387	0x304B      	MOVLW      75
0x0388	0x00FD      	MOVWF      R13
L_main43:
0x0389	0x0BFD      	DECFSZ     R13, 1
0x038A	0x2B89      	GOTO       L_main43
0x038B	0x0BFC      	DECFSZ     R12, 1
0x038C	0x2B89      	GOTO       L_main43
;MyProject.c,273 :: 		ADCON0 = ADCON0 | 0x02;                     //start conversion
0x038D	0x149F      	BSF        ADCON0, 1
;MyProject.c,274 :: 		while(ADCON0 & 0x02); //wait for conversion
L_main44:
0x038E	0x1C9F      	BTFSS      ADCON0, 1
0x038F	0x2B91      	GOTO       L_main45
0x0390	0x2B8E      	GOTO       L_main44
L_main45:
;MyProject.c,275 :: 		SPI_tx(0x0A,ADRESH * 15 / 128); //set the intensity. SPI_init() called above.
0x0391	0x300A      	MOVLW      10
0x0392	0x00B0      	MOVWF      FARG_SPI_tx_addr
0x0393	0x081E      	MOVF       ADRESH, 0
0x0394	0x00F0      	MOVWF      R0
0x0395	0x300F      	MOVLW      15
0x0396	0x00F4      	MOVWF      R4
0x0397	0x20C6      	CALL       _Mul_8X8_U
0x0398	0x3080      	MOVLW      128
0x0399	0x00F4      	MOVWF      R4
0x039A	0x01F5      	CLRF       R4+1
0x039B	0x2195      	CALL       _Div_16x16_S
0x039C	0x0870      	MOVF       R0, 0
0x039D	0x00B1      	MOVWF      FARG_SPI_tx_dat
0x039E	0x204A      	CALL       _SPI_tx
;MyProject.c,276 :: 		}
0x039F	0x2B7E      	GOTO       L_main41
L_main42:
;MyProject.c,278 :: 		delay_ms(20); //Debounce
0x03A0	0x301A      	MOVLW      26
0x03A1	0x00FC      	MOVWF      R12
0x03A2	0x30F8      	MOVLW      248
0x03A3	0x00FD      	MOVWF      R13
L_main46:
0x03A4	0x0BFD      	DECFSZ     R13, 1
0x03A5	0x2BA4      	GOTO       L_main46
0x03A6	0x0BFC      	DECFSZ     R12, 1
0x03A7	0x2BA4      	GOTO       L_main46
0x03A8	0x0000      	NOP
;MyProject.c,279 :: 		INTF_bit = 0;//Clear INT flag
0x03A9	0x108B      	BCF        INTF_bit, BitPos(INTF_bit+0)
;MyProject.c,282 :: 		ADON_bit = 0;
0x03AA	0x101F      	BCF        ADON_bit, BitPos(ADON_bit+0)
;MyProject.c,286 :: 		if (~PORTB.F1) {
0x03AB	0x1886      	BTFSC      PORTB, 1
0x03AC	0x2BAF      	GOTO       L__main111
0x03AD	0x1403      	BSF        STATUS, 0
0x03AE	0x2BB0      	GOTO       L__main112
L__main111:
0x03AF	0x1003      	BCF        STATUS, 0
L__main112:
0x03B0	0x1C03      	BTFSS      STATUS, 0
0x03B1	0x2C3D      	GOTO       L_main47
;MyProject.c,289 :: 		SPI_init();
0x03B2	0x2040      	CALL       _SPI_init
;MyProject.c,290 :: 		SPI_tx(0x01,0x0A);
0x03B3	0x3001      	MOVLW      1
0x03B4	0x00B0      	MOVWF      FARG_SPI_tx_addr
0x03B5	0x300A      	MOVLW      10
0x03B6	0x00B1      	MOVWF      FARG_SPI_tx_dat
0x03B7	0x204A      	CALL       _SPI_tx
;MyProject.c,291 :: 		SPI_tx(0x02,0x0A);
0x03B8	0x3002      	MOVLW      2
0x03B9	0x00B0      	MOVWF      FARG_SPI_tx_addr
0x03BA	0x300A      	MOVLW      10
0x03BB	0x00B1      	MOVWF      FARG_SPI_tx_dat
0x03BC	0x204A      	CALL       _SPI_tx
;MyProject.c,292 :: 		SPI_tx(0x03,0x0A);
0x03BD	0x3003      	MOVLW      3
0x03BE	0x00B0      	MOVWF      FARG_SPI_tx_addr
0x03BF	0x300A      	MOVLW      10
0x03C0	0x00B1      	MOVWF      FARG_SPI_tx_dat
0x03C1	0x204A      	CALL       _SPI_tx
;MyProject.c,293 :: 		SPI_tx(0x04,0x0A);
0x03C2	0x3004      	MOVLW      4
0x03C3	0x00B0      	MOVWF      FARG_SPI_tx_addr
0x03C4	0x300A      	MOVLW      10
0x03C5	0x00B1      	MOVWF      FARG_SPI_tx_dat
0x03C6	0x204A      	CALL       _SPI_tx
;MyProject.c,295 :: 		SPEN_bit = 1;//enable uart
0x03C7	0x1798      	BSF        SPEN_bit, BitPos(SPEN_bit+0)
;MyProject.c,297 :: 		TXREG = 1;//Send time update request
0x03C8	0x3001      	MOVLW      1
0x03C9	0x0099      	MOVWF      TXREG
;MyProject.c,298 :: 		while(!TRMT_bit); //wait for transmission to complete
L_main48:
0x03CA	0x1683      	BSF        STATUS, 5
0x03CB	0x1898      	BTFSC      TRMT_bit, BitPos(TRMT_bit+0)
0x03CC	0x2BCE      	GOTO       L_main49
0x03CD	0x2BCA      	GOTO       L_main48
L_main49:
;MyProject.c,300 :: 		INTF_bit = 0; //Clear external INT flag (Button INT)
0x03CE	0x108B      	BCF        INTF_bit, BitPos(INTF_bit+0)
;MyProject.c,304 :: 		while(!RCIF_bit && ~INTF_bit); //wait for reception (HOUR)
L_main50:
0x03CF	0x1283      	BCF        STATUS, 5
0x03D0	0x1A8C      	BTFSC      RCIF_bit, BitPos(RCIF_bit+0)
0x03D1	0x2BDA      	GOTO       L_main51
0x03D2	0x188B      	BTFSC      INTF_bit, BitPos(INTF_bit+0)
0x03D3	0x2BD6      	GOTO       L__main113
0x03D4	0x1403      	BSF        STATUS, 0
0x03D5	0x2BD7      	GOTO       L__main114
L__main113:
0x03D6	0x1003      	BCF        STATUS, 0
L__main114:
0x03D7	0x1C03      	BTFSS      STATUS, 0
0x03D8	0x2BDA      	GOTO       L_main51
L__main104:
0x03D9	0x2BCF      	GOTO       L_main50
L_main51:
;MyProject.c,306 :: 		if (INTF_bit){
0x03DA	0x1C8B      	BTFSS      INTF_bit, BitPos(INTF_bit+0)
0x03DB	0x2BE8      	GOTO       L_main54
;MyProject.c,308 :: 		delay_ms(20);//Debounce wait
0x03DC	0x301A      	MOVLW      26
0x03DD	0x00FC      	MOVWF      R12
0x03DE	0x30F8      	MOVLW      248
0x03DF	0x00FD      	MOVWF      R13
L_main55:
0x03E0	0x0BFD      	DECFSZ     R13, 1
0x03E1	0x2BE0      	GOTO       L_main55
0x03E2	0x0BFC      	DECFSZ     R12, 1
0x03E3	0x2BE0      	GOTO       L_main55
0x03E4	0x0000      	NOP
;MyProject.c,309 :: 		I2C_update_time(); //Sync microcontroller time from DS1307
0x03E5	0x210C      	CALL       _I2C_update_time
;MyProject.c,310 :: 		INTF_bit = 0;//Clear INT flag
0x03E6	0x108B      	BCF        INTF_bit, BitPos(INTF_bit+0)
;MyProject.c,312 :: 		} else {
0x03E7	0x2C3C      	GOTO       L_main56
L_main54:
;MyProject.c,314 :: 		rtc_hour_set = RCREG;
0x03E8	0x1283      	BCF        STATUS, 5
0x03E9	0x081A      	MOVF       RCREG, 0
0x03EA	0x00A5      	MOVWF      _rtc_hour_set
;MyProject.c,316 :: 		while(!RCIF_bit); //wait for reception (MIN)
L_main57:
0x03EB	0x1A8C      	BTFSC      RCIF_bit, BitPos(RCIF_bit+0)
0x03EC	0x2BEE      	GOTO       L_main58
0x03ED	0x2BEB      	GOTO       L_main57
L_main58:
;MyProject.c,317 :: 		rtc_min_set = RCREG;
0x03EE	0x081A      	MOVF       RCREG, 0
0x03EF	0x00A2      	MOVWF      _rtc_min_set
;MyProject.c,319 :: 		while(!RCIF_bit); //wait for reception (SEC)
L_main59:
0x03F0	0x1A8C      	BTFSC      RCIF_bit, BitPos(RCIF_bit+0)
0x03F1	0x2BF3      	GOTO       L_main60
0x03F2	0x2BF0      	GOTO       L_main59
L_main60:
;MyProject.c,320 :: 		bcd = RCREG & 0x7F; //CH bit in DS1307 should be 0
0x03F3	0x307F      	MOVLW      127
0x03F4	0x051A      	ANDWF      RCREG, 0
0x03F5	0x00AA      	MOVWF      _bcd
0x03F6	0x01AB      	CLRF       _bcd+1
0x03F7	0x3000      	MOVLW      0
0x03F8	0x05AB      	ANDWF      _bcd+1, 1
0x03F9	0x3000      	MOVLW      0
0x03FA	0x00AB      	MOVWF      _bcd+1
;MyProject.c,321 :: 		lower_nib = bcd & 0x0F;
0x03FB	0x300F      	MOVLW      15
0x03FC	0x052A      	ANDWF      _bcd, 0
0x03FD	0x00AC      	MOVWF      FLOC__main
0x03FE	0x082B      	MOVF       _bcd+1, 0
0x03FF	0x00AD      	MOVWF      FLOC__main+1
0x0400	0x3000      	MOVLW      0
0x0401	0x05AD      	ANDWF      FLOC__main+1, 1
0x0402	0x082C      	MOVF       FLOC__main, 0
0x0403	0x00A8      	MOVWF      _lower_nib
0x0404	0x082D      	MOVF       FLOC__main+1, 0
0x0405	0x00A9      	MOVWF      _lower_nib+1
;MyProject.c,322 :: 		timer_overflow_seconds = (bcd >> 4)*10;
0x0406	0x082A      	MOVF       _bcd, 0
0x0407	0x00F0      	MOVWF      R0
0x0408	0x082B      	MOVF       _bcd+1, 0
0x0409	0x00F1      	MOVWF      R0+1
0x040A	0x0CF1      	RRF        R0+1, 1
0x040B	0x0CF0      	RRF        R0, 1
0x040C	0x13F1      	BCF        R0+1, 7
0x040D	0x0CF1      	RRF        R0+1, 1
0x040E	0x0CF0      	RRF        R0, 1
0x040F	0x13F1      	BCF        R0+1, 7
0x0410	0x0CF1      	RRF        R0+1, 1
0x0411	0x0CF0      	RRF        R0, 1
0x0412	0x13F1      	BCF        R0+1, 7
0x0413	0x0CF1      	RRF        R0+1, 1
0x0414	0x0CF0      	RRF        R0, 1
0x0415	0x13F1      	BCF        R0+1, 7
0x0416	0x300A      	MOVLW      10
0x0417	0x00F4      	MOVWF      R4
0x0418	0x3000      	MOVLW      0
0x0419	0x00F5      	MOVWF      R4+1
0x041A	0x2067      	CALL       _Mul_16X16_U
0x041B	0x0870      	MOVF       R0, 0
0x041C	0x00A0      	MOVWF      _timer_overflow_seconds
0x041D	0x0871      	MOVF       R0+1, 0
0x041E	0x00A1      	MOVWF      _timer_overflow_seconds+1
;MyProject.c,323 :: 		timer_overflow_seconds += lower_nib;
0x041F	0x082C      	MOVF       FLOC__main, 0
0x0420	0x07F0      	ADDWF      R0, 1
0x0421	0x082D      	MOVF       FLOC__main+1, 0
0x0422	0x1803      	BTFSC      STATUS, 0
0x0423	0x3E01      	ADDLW      1
0x0424	0x07F1      	ADDWF      R0+1, 1
0x0425	0x0870      	MOVF       R0, 0
0x0426	0x00A0      	MOVWF      _timer_overflow_seconds
0x0427	0x0871      	MOVF       R0+1, 0
0x0428	0x00A1      	MOVWF      _timer_overflow_seconds+1
;MyProject.c,324 :: 		timer_overflow_seconds = 0xFF - (60 - timer_overflow_seconds);
0x0429	0x0870      	MOVF       R0, 0
0x042A	0x3C3C      	SUBLW      60
0x042B	0x00F0      	MOVWF      R0
0x042C	0x0871      	MOVF       R0+1, 0
0x042D	0x1C03      	BTFSS      STATUS, 0
0x042E	0x3E01      	ADDLW      1
0x042F	0x01F1      	CLRF       R0+1
0x0430	0x02F1      	SUBWF      R0+1, 1
0x0431	0x0870      	MOVF       R0, 0
0x0432	0x3CFF      	SUBLW      255
0x0433	0x00A0      	MOVWF      _timer_overflow_seconds
0x0434	0x0871      	MOVF       R0+1, 0
0x0435	0x1C03      	BTFSS      STATUS, 0
0x0436	0x3E01      	ADDLW      1
0x0437	0x01A1      	CLRF       _timer_overflow_seconds+1
0x0438	0x02A1      	SUBWF      _timer_overflow_seconds+1, 1
;MyProject.c,326 :: 		I2C_update_rtc(bcd);//Update DS1307 time registers with seconds
0x0439	0x082A      	MOVF       _bcd, 0
0x043A	0x00AE      	MOVWF      FARG_I2C_update_rtc_sec
0x043B	0x20DF      	CALL       _I2C_update_rtc
;MyProject.c,327 :: 		}
L_main56:
;MyProject.c,330 :: 		} else {
0x043C	0x2C3E      	GOTO       L_main61
L_main47:
;MyProject.c,332 :: 		I2C_update_time(); //Sync microcontroller time from DS1307
0x043D	0x210C      	CALL       _I2C_update_time
;MyProject.c,333 :: 		}
L_main61:
;MyProject.c,336 :: 		TMR1H = 0xFF;
0x043E	0x30FF      	MOVLW      255
0x043F	0x1283      	BCF        STATUS, 5
0x0440	0x008F      	MOVWF      TMR1H
;MyProject.c,337 :: 		TMR1L = timer_overflow_seconds;
0x0441	0x0820      	MOVF       _timer_overflow_seconds, 0
0x0442	0x008E      	MOVWF      TMR1L
;MyProject.c,338 :: 		TMR1IF_bit = 0;//Clear Timer1/Counter1 overflow interrupt
0x0443	0x100C      	BCF        TMR1IF_bit, BitPos(TMR1IF_bit+0)
;MyProject.c,339 :: 		TMR1ON_bit = 1;//Turn on the 60 seconds overflow
0x0444	0x1410      	BSF        TMR1ON_bit, BitPos(TMR1ON_bit+0)
;MyProject.c,341 :: 		SPI_update();//Update the display
0x0445	0x209E      	CALL       _SPI_update
;MyProject.c,342 :: 		}
L_main40:
L_main18:
;MyProject.c,343 :: 		}
0x0446	0x2AA3      	GOTO       L_main14
;MyProject.c,344 :: 		}
L_end_main:
0x0447	0x2C47      	GOTO       $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0003      [10]    _I2C_init
0x000D      [44]    _Div_16x16_S_L
0x0039       [7]    _____DoICP
0x0040      [10]    _SPI_init
0x004A      [29]    _SPI_tx
0x0067      [43]    _Mul_16X16_U
0x0092      [12]    ___CC2DW
0x009E      [40]    _SPI_update
0x00C6      [25]    _Mul_8X8_U
0x00DF      [45]    _I2C_update_rtc
0x010C     [137]    _I2C_update_time
0x0195     [105]    _Div_16x16_S
0x01FE     [586]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    INDF
0x0002       [1]    PCL
0x0003       [1]    STATUS
0x0004       [1]    FSR
0x0005       [1]    PORTA
0x0006       [1]    PORTB
0x0007       [1]    PORTC
0x000A       [1]    PCLATH
0x000B       [0]    INTF_bit
0x000B       [0]    PEIE_bit
0x000B       [0]    INTE_bit
0x000C       [0]    TMR1IF_bit
0x000C       [0]    RCIF_bit
0x000E       [1]    TMR1L
0x000F       [1]    TMR1H
0x0010       [0]    T1SYNC_bit
0x0010       [0]    TMR1ON_bit
0x0010       [0]    TMR1CS_bit
0x0013       [1]    SSPBUF
0x0014       [1]    SSPCON
0x0014       [0]    SSPEN_bit
0x0018       [0]    SPEN_bit
0x0018       [0]    CREN_bit
0x0019       [1]    TXREG
0x001A       [1]    RCREG
0x001E       [1]    ADRESH
0x001F       [0]    ADCS0_bit
0x001F       [0]    ADON_bit
0x001F       [1]    ADCON0
0x0020       [2]    _timer_overflow_seconds
0x0022       [1]    _rtc_min_set
0x0023       [1]    _rtc_temp_set
0x0024       [1]    _time_set_digit_addr
0x0025       [1]    _rtc_hour_set
0x0026       [2]    ___DoICPAddr
0x0028       [2]    _lower_nib
0x002A       [2]    _bcd
0x002C       [2]    FLOC__main
0x002E       [1]    FARG_I2C_update_rtc_sec
0x002E       [2]    FLOC__I2C_update_time
0x0030       [1]    FARG_SPI_tx_addr
0x0031       [1]    FARG_SPI_tx_dat
0x0070       [1]    R0
0x0071       [1]    R1
0x0072       [1]    R2
0x0073       [1]    R3
0x0074       [1]    R4
0x0075       [1]    R5
0x0076       [1]    R6
0x0077       [1]    R7
0x0078       [1]    R8
0x0079       [1]    R9
0x007A       [1]    R10
0x007B       [1]    R11
0x007C       [1]    R12
0x007D       [1]    R13
0x007E       [1]    R14
0x007F       [1]    R15
0x0081       [1]    OPTION_REG
0x0081       [0]    INTEDG_bit
0x0085       [1]    TRISA
0x0086       [1]    TRISB
0x0087       [1]    TRISC
0x008C       [0]    TMR1IE_bit
0x0091       [0]    SEN_bit
0x0091       [0]    ACKDT_bit
0x0091       [0]    ACKEN_bit
0x0091       [0]    RSEN_bit
0x0091       [0]    PEN_bit
0x0091       [0]    RCEN_bit
0x0093       [1]    SSPADD
0x0094       [0]    CKE_bit
0x0094       [0]    BF_bit
0x0094       [1]    SSPSTAT
0x0094       [0]    SMP_bit
0x0095       [1]    WPUB
0x0098       [0]    TXEN_bit
0x0098       [0]    BRGH_bit
0x0098       [0]    TRMT_bit
0x0099       [1]    SPBRG
0x0188       [0]    ANS4_bit
0x0188       [0]    ANS1_bit
0x0189       [0]    ANS12_bit
0x0189       [0]    ANS10_bit
